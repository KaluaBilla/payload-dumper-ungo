// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: update_metadata.proto
// Protobuf C++ Version: 5.29.3

#include "update_metadata.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace chromeos_update_engine {

inline constexpr VABCFeatureSet::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        threaded_{false},
        batch_writes_{false} {}

template <typename>
PROTOBUF_CONSTEXPR VABCFeatureSet::VABCFeatureSet(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct VABCFeatureSetDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VABCFeatureSetDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~VABCFeatureSetDefaultTypeInternal() {}
  union {
    VABCFeatureSet _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VABCFeatureSetDefaultTypeInternal _VABCFeatureSet_default_instance_;

inline constexpr Signatures_Signature::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        data_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        version_{0u},
        unpadded_signature_size_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR Signatures_Signature::Signatures_Signature(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct Signatures_SignatureDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Signatures_SignatureDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Signatures_SignatureDefaultTypeInternal() {}
  union {
    Signatures_Signature _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Signatures_SignatureDefaultTypeInternal _Signatures_Signature_default_instance_;

inline constexpr PartitionInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        hash_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        size_{::uint64_t{0u}} {}

template <typename>
PROTOBUF_CONSTEXPR PartitionInfo::PartitionInfo(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PartitionInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PartitionInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PartitionInfoDefaultTypeInternal() {}
  union {
    PartitionInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PartitionInfoDefaultTypeInternal _PartitionInfo_default_instance_;

inline constexpr Extent::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        start_block_{::uint64_t{0u}},
        num_blocks_{::uint64_t{0u}} {}

template <typename>
PROTOBUF_CONSTEXPR Extent::Extent(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ExtentDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ExtentDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ExtentDefaultTypeInternal() {}
  union {
    Extent _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ExtentDefaultTypeInternal _Extent_default_instance_;

inline constexpr DynamicPartitionGroup::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        partition_names_{},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        size_{::uint64_t{0u}} {}

template <typename>
PROTOBUF_CONSTEXPR DynamicPartitionGroup::DynamicPartitionGroup(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct DynamicPartitionGroupDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DynamicPartitionGroupDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DynamicPartitionGroupDefaultTypeInternal() {}
  union {
    DynamicPartitionGroup _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DynamicPartitionGroupDefaultTypeInternal _DynamicPartitionGroup_default_instance_;

inline constexpr ApexInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        package_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        version_{::int64_t{0}},
        decompressed_size_{::int64_t{0}},
        is_compressed_{false} {}

template <typename>
PROTOBUF_CONSTEXPR ApexInfo::ApexInfo(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ApexInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ApexInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ApexInfoDefaultTypeInternal() {}
  union {
    ApexInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ApexInfoDefaultTypeInternal _ApexInfo_default_instance_;

inline constexpr Signatures::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : signatures_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Signatures::Signatures(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SignaturesDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SignaturesDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SignaturesDefaultTypeInternal() {}
  union {
    Signatures _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SignaturesDefaultTypeInternal _Signatures_default_instance_;

inline constexpr InstallOperation::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        src_extents_{},
        dst_extents_{},
        data_sha256_hash_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        src_sha256_hash_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        data_offset_{::uint64_t{0u}},
        data_length_{::uint64_t{0u}},
        src_length_{::uint64_t{0u}},
        dst_length_{::uint64_t{0u}},
        type_{static_cast< ::chromeos_update_engine::InstallOperation_Type >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR InstallOperation::InstallOperation(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct InstallOperationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InstallOperationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~InstallOperationDefaultTypeInternal() {}
  union {
    InstallOperation _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InstallOperationDefaultTypeInternal _InstallOperation_default_instance_;

inline constexpr DynamicPartitionMetadata::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        groups_{},
        vabc_compression_param_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        vabc_feature_set_{nullptr},
        snapshot_enabled_{false},
        vabc_enabled_{false},
        cow_version_{0u},
        compression_factor_{::uint64_t{0u}} {}

template <typename>
PROTOBUF_CONSTEXPR DynamicPartitionMetadata::DynamicPartitionMetadata(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct DynamicPartitionMetadataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DynamicPartitionMetadataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DynamicPartitionMetadataDefaultTypeInternal() {}
  union {
    DynamicPartitionMetadata _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DynamicPartitionMetadataDefaultTypeInternal _DynamicPartitionMetadata_default_instance_;

inline constexpr CowMergeOperation::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        src_extent_{nullptr},
        dst_extent_{nullptr},
        type_{static_cast< ::chromeos_update_engine::CowMergeOperation_Type >(0)},
        src_offset_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR CowMergeOperation::CowMergeOperation(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CowMergeOperationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CowMergeOperationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CowMergeOperationDefaultTypeInternal() {}
  union {
    CowMergeOperation _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CowMergeOperationDefaultTypeInternal _CowMergeOperation_default_instance_;

inline constexpr ApexMetadata::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : apex_info_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ApexMetadata::ApexMetadata(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ApexMetadataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ApexMetadataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ApexMetadataDefaultTypeInternal() {}
  union {
    ApexMetadata _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ApexMetadataDefaultTypeInternal _ApexMetadata_default_instance_;

inline constexpr PartitionUpdate::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        new_partition_signature_{},
        operations_{},
        merge_operations_{},
        partition_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        postinstall_path_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        filesystem_type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        hash_tree_algorithm_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        hash_tree_salt_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        version_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        old_partition_info_{nullptr},
        new_partition_info_{nullptr},
        hash_tree_data_extent_{nullptr},
        hash_tree_extent_{nullptr},
        fec_data_extent_{nullptr},
        fec_extent_{nullptr},
        estimate_cow_size_{::uint64_t{0u}},
        estimate_op_count_max_{::uint64_t{0u}},
        run_postinstall_{false},
        postinstall_optional_{false},
        fec_roots_{2u} {}

template <typename>
PROTOBUF_CONSTEXPR PartitionUpdate::PartitionUpdate(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PartitionUpdateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PartitionUpdateDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PartitionUpdateDefaultTypeInternal() {}
  union {
    PartitionUpdate _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PartitionUpdateDefaultTypeInternal _PartitionUpdate_default_instance_;

inline constexpr DeltaArchiveManifest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        partitions_{},
        apex_info_{},
        security_patch_level_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        dynamic_partition_metadata_{nullptr},
        signatures_offset_{::uint64_t{0u}},
        signatures_size_{::uint64_t{0u}},
        max_timestamp_{::int64_t{0}},
        minor_version_{0u},
        partial_update_{false},
        block_size_{4096u} {}

template <typename>
PROTOBUF_CONSTEXPR DeltaArchiveManifest::DeltaArchiveManifest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct DeltaArchiveManifestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeltaArchiveManifestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeltaArchiveManifestDefaultTypeInternal() {}
  union {
    DeltaArchiveManifest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeltaArchiveManifestDefaultTypeInternal _DeltaArchiveManifest_default_instance_;
}  // namespace chromeos_update_engine
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_update_5fmetadata_2eproto[2];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_update_5fmetadata_2eproto = nullptr;
const ::uint32_t
    TableStruct_update_5fmetadata_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::chromeos_update_engine::Extent, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::chromeos_update_engine::Extent, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::chromeos_update_engine::Extent, _impl_.start_block_),
        PROTOBUF_FIELD_OFFSET(::chromeos_update_engine::Extent, _impl_.num_blocks_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::chromeos_update_engine::Signatures_Signature, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::chromeos_update_engine::Signatures_Signature, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::chromeos_update_engine::Signatures_Signature, _impl_.version_),
        PROTOBUF_FIELD_OFFSET(::chromeos_update_engine::Signatures_Signature, _impl_.data_),
        PROTOBUF_FIELD_OFFSET(::chromeos_update_engine::Signatures_Signature, _impl_.unpadded_signature_size_),
        1,
        0,
        2,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::chromeos_update_engine::Signatures, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::chromeos_update_engine::Signatures, _impl_.signatures_),
        PROTOBUF_FIELD_OFFSET(::chromeos_update_engine::PartitionInfo, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::chromeos_update_engine::PartitionInfo, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::chromeos_update_engine::PartitionInfo, _impl_.size_),
        PROTOBUF_FIELD_OFFSET(::chromeos_update_engine::PartitionInfo, _impl_.hash_),
        1,
        0,
        PROTOBUF_FIELD_OFFSET(::chromeos_update_engine::InstallOperation, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::chromeos_update_engine::InstallOperation, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::chromeos_update_engine::InstallOperation, _impl_.type_),
        PROTOBUF_FIELD_OFFSET(::chromeos_update_engine::InstallOperation, _impl_.data_offset_),
        PROTOBUF_FIELD_OFFSET(::chromeos_update_engine::InstallOperation, _impl_.data_length_),
        PROTOBUF_FIELD_OFFSET(::chromeos_update_engine::InstallOperation, _impl_.src_extents_),
        PROTOBUF_FIELD_OFFSET(::chromeos_update_engine::InstallOperation, _impl_.src_length_),
        PROTOBUF_FIELD_OFFSET(::chromeos_update_engine::InstallOperation, _impl_.dst_extents_),
        PROTOBUF_FIELD_OFFSET(::chromeos_update_engine::InstallOperation, _impl_.dst_length_),
        PROTOBUF_FIELD_OFFSET(::chromeos_update_engine::InstallOperation, _impl_.data_sha256_hash_),
        PROTOBUF_FIELD_OFFSET(::chromeos_update_engine::InstallOperation, _impl_.src_sha256_hash_),
        6,
        2,
        3,
        ~0u,
        4,
        ~0u,
        5,
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::chromeos_update_engine::CowMergeOperation, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::chromeos_update_engine::CowMergeOperation, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::chromeos_update_engine::CowMergeOperation, _impl_.type_),
        PROTOBUF_FIELD_OFFSET(::chromeos_update_engine::CowMergeOperation, _impl_.src_extent_),
        PROTOBUF_FIELD_OFFSET(::chromeos_update_engine::CowMergeOperation, _impl_.dst_extent_),
        PROTOBUF_FIELD_OFFSET(::chromeos_update_engine::CowMergeOperation, _impl_.src_offset_),
        2,
        0,
        1,
        3,
        PROTOBUF_FIELD_OFFSET(::chromeos_update_engine::PartitionUpdate, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::chromeos_update_engine::PartitionUpdate, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::chromeos_update_engine::PartitionUpdate, _impl_.partition_name_),
        PROTOBUF_FIELD_OFFSET(::chromeos_update_engine::PartitionUpdate, _impl_.run_postinstall_),
        PROTOBUF_FIELD_OFFSET(::chromeos_update_engine::PartitionUpdate, _impl_.postinstall_path_),
        PROTOBUF_FIELD_OFFSET(::chromeos_update_engine::PartitionUpdate, _impl_.filesystem_type_),
        PROTOBUF_FIELD_OFFSET(::chromeos_update_engine::PartitionUpdate, _impl_.new_partition_signature_),
        PROTOBUF_FIELD_OFFSET(::chromeos_update_engine::PartitionUpdate, _impl_.old_partition_info_),
        PROTOBUF_FIELD_OFFSET(::chromeos_update_engine::PartitionUpdate, _impl_.new_partition_info_),
        PROTOBUF_FIELD_OFFSET(::chromeos_update_engine::PartitionUpdate, _impl_.operations_),
        PROTOBUF_FIELD_OFFSET(::chromeos_update_engine::PartitionUpdate, _impl_.postinstall_optional_),
        PROTOBUF_FIELD_OFFSET(::chromeos_update_engine::PartitionUpdate, _impl_.hash_tree_data_extent_),
        PROTOBUF_FIELD_OFFSET(::chromeos_update_engine::PartitionUpdate, _impl_.hash_tree_extent_),
        PROTOBUF_FIELD_OFFSET(::chromeos_update_engine::PartitionUpdate, _impl_.hash_tree_algorithm_),
        PROTOBUF_FIELD_OFFSET(::chromeos_update_engine::PartitionUpdate, _impl_.hash_tree_salt_),
        PROTOBUF_FIELD_OFFSET(::chromeos_update_engine::PartitionUpdate, _impl_.fec_data_extent_),
        PROTOBUF_FIELD_OFFSET(::chromeos_update_engine::PartitionUpdate, _impl_.fec_extent_),
        PROTOBUF_FIELD_OFFSET(::chromeos_update_engine::PartitionUpdate, _impl_.fec_roots_),
        PROTOBUF_FIELD_OFFSET(::chromeos_update_engine::PartitionUpdate, _impl_.version_),
        PROTOBUF_FIELD_OFFSET(::chromeos_update_engine::PartitionUpdate, _impl_.merge_operations_),
        PROTOBUF_FIELD_OFFSET(::chromeos_update_engine::PartitionUpdate, _impl_.estimate_cow_size_),
        PROTOBUF_FIELD_OFFSET(::chromeos_update_engine::PartitionUpdate, _impl_.estimate_op_count_max_),
        0,
        14,
        1,
        2,
        ~0u,
        6,
        7,
        ~0u,
        15,
        8,
        9,
        3,
        4,
        10,
        11,
        16,
        5,
        ~0u,
        12,
        13,
        PROTOBUF_FIELD_OFFSET(::chromeos_update_engine::DynamicPartitionGroup, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::chromeos_update_engine::DynamicPartitionGroup, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::chromeos_update_engine::DynamicPartitionGroup, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::chromeos_update_engine::DynamicPartitionGroup, _impl_.size_),
        PROTOBUF_FIELD_OFFSET(::chromeos_update_engine::DynamicPartitionGroup, _impl_.partition_names_),
        0,
        1,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::chromeos_update_engine::VABCFeatureSet, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::chromeos_update_engine::VABCFeatureSet, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::chromeos_update_engine::VABCFeatureSet, _impl_.threaded_),
        PROTOBUF_FIELD_OFFSET(::chromeos_update_engine::VABCFeatureSet, _impl_.batch_writes_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::chromeos_update_engine::DynamicPartitionMetadata, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::chromeos_update_engine::DynamicPartitionMetadata, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::chromeos_update_engine::DynamicPartitionMetadata, _impl_.groups_),
        PROTOBUF_FIELD_OFFSET(::chromeos_update_engine::DynamicPartitionMetadata, _impl_.snapshot_enabled_),
        PROTOBUF_FIELD_OFFSET(::chromeos_update_engine::DynamicPartitionMetadata, _impl_.vabc_enabled_),
        PROTOBUF_FIELD_OFFSET(::chromeos_update_engine::DynamicPartitionMetadata, _impl_.vabc_compression_param_),
        PROTOBUF_FIELD_OFFSET(::chromeos_update_engine::DynamicPartitionMetadata, _impl_.cow_version_),
        PROTOBUF_FIELD_OFFSET(::chromeos_update_engine::DynamicPartitionMetadata, _impl_.vabc_feature_set_),
        PROTOBUF_FIELD_OFFSET(::chromeos_update_engine::DynamicPartitionMetadata, _impl_.compression_factor_),
        ~0u,
        2,
        3,
        0,
        4,
        1,
        5,
        PROTOBUF_FIELD_OFFSET(::chromeos_update_engine::ApexInfo, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::chromeos_update_engine::ApexInfo, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::chromeos_update_engine::ApexInfo, _impl_.package_name_),
        PROTOBUF_FIELD_OFFSET(::chromeos_update_engine::ApexInfo, _impl_.version_),
        PROTOBUF_FIELD_OFFSET(::chromeos_update_engine::ApexInfo, _impl_.is_compressed_),
        PROTOBUF_FIELD_OFFSET(::chromeos_update_engine::ApexInfo, _impl_.decompressed_size_),
        0,
        1,
        3,
        2,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::chromeos_update_engine::ApexMetadata, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::chromeos_update_engine::ApexMetadata, _impl_.apex_info_),
        PROTOBUF_FIELD_OFFSET(::chromeos_update_engine::DeltaArchiveManifest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::chromeos_update_engine::DeltaArchiveManifest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::chromeos_update_engine::DeltaArchiveManifest, _impl_.block_size_),
        PROTOBUF_FIELD_OFFSET(::chromeos_update_engine::DeltaArchiveManifest, _impl_.signatures_offset_),
        PROTOBUF_FIELD_OFFSET(::chromeos_update_engine::DeltaArchiveManifest, _impl_.signatures_size_),
        PROTOBUF_FIELD_OFFSET(::chromeos_update_engine::DeltaArchiveManifest, _impl_.minor_version_),
        PROTOBUF_FIELD_OFFSET(::chromeos_update_engine::DeltaArchiveManifest, _impl_.partitions_),
        PROTOBUF_FIELD_OFFSET(::chromeos_update_engine::DeltaArchiveManifest, _impl_.max_timestamp_),
        PROTOBUF_FIELD_OFFSET(::chromeos_update_engine::DeltaArchiveManifest, _impl_.dynamic_partition_metadata_),
        PROTOBUF_FIELD_OFFSET(::chromeos_update_engine::DeltaArchiveManifest, _impl_.partial_update_),
        PROTOBUF_FIELD_OFFSET(::chromeos_update_engine::DeltaArchiveManifest, _impl_.apex_info_),
        PROTOBUF_FIELD_OFFSET(::chromeos_update_engine::DeltaArchiveManifest, _impl_.security_patch_level_),
        7,
        2,
        3,
        5,
        ~0u,
        4,
        1,
        6,
        ~0u,
        0,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 10, -1, sizeof(::chromeos_update_engine::Extent)},
        {12, 23, -1, sizeof(::chromeos_update_engine::Signatures_Signature)},
        {26, -1, -1, sizeof(::chromeos_update_engine::Signatures)},
        {35, 45, -1, sizeof(::chromeos_update_engine::PartitionInfo)},
        {47, 64, -1, sizeof(::chromeos_update_engine::InstallOperation)},
        {73, 85, -1, sizeof(::chromeos_update_engine::CowMergeOperation)},
        {89, 117, -1, sizeof(::chromeos_update_engine::PartitionUpdate)},
        {137, 148, -1, sizeof(::chromeos_update_engine::DynamicPartitionGroup)},
        {151, 161, -1, sizeof(::chromeos_update_engine::VABCFeatureSet)},
        {163, 178, -1, sizeof(::chromeos_update_engine::DynamicPartitionMetadata)},
        {185, 197, -1, sizeof(::chromeos_update_engine::ApexInfo)},
        {201, -1, -1, sizeof(::chromeos_update_engine::ApexMetadata)},
        {210, 228, -1, sizeof(::chromeos_update_engine::DeltaArchiveManifest)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::chromeos_update_engine::_Extent_default_instance_._instance,
    &::chromeos_update_engine::_Signatures_Signature_default_instance_._instance,
    &::chromeos_update_engine::_Signatures_default_instance_._instance,
    &::chromeos_update_engine::_PartitionInfo_default_instance_._instance,
    &::chromeos_update_engine::_InstallOperation_default_instance_._instance,
    &::chromeos_update_engine::_CowMergeOperation_default_instance_._instance,
    &::chromeos_update_engine::_PartitionUpdate_default_instance_._instance,
    &::chromeos_update_engine::_DynamicPartitionGroup_default_instance_._instance,
    &::chromeos_update_engine::_VABCFeatureSet_default_instance_._instance,
    &::chromeos_update_engine::_DynamicPartitionMetadata_default_instance_._instance,
    &::chromeos_update_engine::_ApexInfo_default_instance_._instance,
    &::chromeos_update_engine::_ApexMetadata_default_instance_._instance,
    &::chromeos_update_engine::_DeltaArchiveManifest_default_instance_._instance,
};
const char descriptor_table_protodef_update_5fmetadata_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\025update_metadata.proto\022\026chromeos_update"
    "_engine\"1\n\006Extent\022\023\n\013start_block\030\001 \001(\004\022\022"
    "\n\nnum_blocks\030\002 \001(\004\"\237\001\n\nSignatures\022@\n\nsig"
    "natures\030\001 \003(\0132,.chromeos_update_engine.S"
    "ignatures.Signature\032O\n\tSignature\022\023\n\007vers"
    "ion\030\001 \001(\rB\002\030\001\022\014\n\004data\030\002 \001(\014\022\037\n\027unpadded_"
    "signature_size\030\003 \001(\007\"+\n\rPartitionInfo\022\014\n"
    "\004size\030\001 \001(\004\022\014\n\004hash\030\002 \001(\014\"\260\004\n\020InstallOpe"
    "ration\022;\n\004type\030\001 \002(\0162-.chromeos_update_e"
    "ngine.InstallOperation.Type\022\023\n\013data_offs"
    "et\030\002 \001(\004\022\023\n\013data_length\030\003 \001(\004\0223\n\013src_ext"
    "ents\030\004 \003(\0132\036.chromeos_update_engine.Exte"
    "nt\022\022\n\nsrc_length\030\005 \001(\004\0223\n\013dst_extents\030\006 "
    "\003(\0132\036.chromeos_update_engine.Extent\022\022\n\nd"
    "st_length\030\007 \001(\004\022\030\n\020data_sha256_hash\030\010 \001("
    "\014\022\027\n\017src_sha256_hash\030\t \001(\014\"\357\001\n\004Type\022\013\n\007R"
    "EPLACE\020\000\022\016\n\nREPLACE_BZ\020\001\022\014\n\004MOVE\020\002\032\002\010\001\022\016"
    "\n\006BSDIFF\020\003\032\002\010\001\022\017\n\013SOURCE_COPY\020\004\022\021\n\rSOURC"
    "E_BSDIFF\020\005\022\016\n\nREPLACE_XZ\020\010\022\010\n\004ZERO\020\006\022\013\n\007"
    "DISCARD\020\007\022\021\n\rBROTLI_BSDIFF\020\n\022\014\n\010PUFFDIFF"
    "\020\t\022\014\n\010ZUCCHINI\020\013\022\022\n\016LZ4DIFF_BSDIFF\020\014\022\024\n\020"
    "LZ4DIFF_PUFFDIFF\020\r\022\010\n\004ZSTD\020\016\"\201\002\n\021CowMerg"
    "eOperation\022<\n\004type\030\001 \001(\0162..chromeos_upda"
    "te_engine.CowMergeOperation.Type\0222\n\nsrc_"
    "extent\030\002 \001(\0132\036.chromeos_update_engine.Ex"
    "tent\0222\n\ndst_extent\030\003 \001(\0132\036.chromeos_upda"
    "te_engine.Extent\022\022\n\nsrc_offset\030\004 \001(\r\"2\n\004"
    "Type\022\014\n\010COW_COPY\020\000\022\013\n\007COW_XOR\020\001\022\017\n\013COW_R"
    "EPLACE\020\002\"\347\006\n\017PartitionUpdate\022\026\n\016partitio"
    "n_name\030\001 \002(\t\022\027\n\017run_postinstall\030\002 \001(\010\022\030\n"
    "\020postinstall_path\030\003 \001(\t\022\027\n\017filesystem_ty"
    "pe\030\004 \001(\t\022M\n\027new_partition_signature\030\005 \003("
    "\0132,.chromeos_update_engine.Signatures.Si"
    "gnature\022A\n\022old_partition_info\030\006 \001(\0132%.ch"
    "romeos_update_engine.PartitionInfo\022A\n\022ne"
    "w_partition_info\030\007 \001(\0132%.chromeos_update"
    "_engine.PartitionInfo\022<\n\noperations\030\010 \003("
    "\0132(.chromeos_update_engine.InstallOperat"
    "ion\022\034\n\024postinstall_optional\030\t \001(\010\022=\n\025has"
    "h_tree_data_extent\030\n \001(\0132\036.chromeos_upda"
    "te_engine.Extent\0228\n\020hash_tree_extent\030\013 \001"
    "(\0132\036.chromeos_update_engine.Extent\022\033\n\023ha"
    "sh_tree_algorithm\030\014 \001(\t\022\026\n\016hash_tree_sal"
    "t\030\r \001(\014\0227\n\017fec_data_extent\030\016 \001(\0132\036.chrom"
    "eos_update_engine.Extent\0222\n\nfec_extent\030\017"
    " \001(\0132\036.chromeos_update_engine.Extent\022\024\n\t"
    "fec_roots\030\020 \001(\r:\0012\022\017\n\007version\030\021 \001(\t\022C\n\020m"
    "erge_operations\030\022 \003(\0132).chromeos_update_"
    "engine.CowMergeOperation\022\031\n\021estimate_cow"
    "_size\030\023 \001(\004\022\035\n\025estimate_op_count_max\030\024 \001"
    "(\004\"L\n\025DynamicPartitionGroup\022\014\n\004name\030\001 \002("
    "\t\022\014\n\004size\030\002 \001(\004\022\027\n\017partition_names\030\003 \003(\t"
    "\"8\n\016VABCFeatureSet\022\020\n\010threaded\030\001 \001(\010\022\024\n\014"
    "batch_writes\030\002 \001(\010\"\234\002\n\030DynamicPartitionM"
    "etadata\022=\n\006groups\030\001 \003(\0132-.chromeos_updat"
    "e_engine.DynamicPartitionGroup\022\030\n\020snapsh"
    "ot_enabled\030\002 \001(\010\022\024\n\014vabc_enabled\030\003 \001(\010\022\036"
    "\n\026vabc_compression_param\030\004 \001(\t\022\023\n\013cow_ve"
    "rsion\030\005 \001(\r\022@\n\020vabc_feature_set\030\006 \001(\0132&."
    "chromeos_update_engine.VABCFeatureSet\022\032\n"
    "\022compression_factor\030\007 \001(\004\"c\n\010ApexInfo\022\024\n"
    "\014package_name\030\001 \001(\t\022\017\n\007version\030\002 \001(\003\022\025\n\r"
    "is_compressed\030\003 \001(\010\022\031\n\021decompressed_size"
    "\030\004 \001(\003\"C\n\014ApexMetadata\0223\n\tapex_info\030\001 \003("
    "\0132 .chromeos_update_engine.ApexInfo\"\303\003\n\024"
    "DeltaArchiveManifest\022\030\n\nblock_size\030\003 \001(\r"
    ":\0044096\022\031\n\021signatures_offset\030\004 \001(\004\022\027\n\017sig"
    "natures_size\030\005 \001(\004\022\030\n\rminor_version\030\014 \001("
    "\r:\0010\022;\n\npartitions\030\r \003(\0132\'.chromeos_upda"
    "te_engine.PartitionUpdate\022\025\n\rmax_timesta"
    "mp\030\016 \001(\003\022T\n\032dynamic_partition_metadata\030\017"
    " \001(\01320.chromeos_update_engine.DynamicPar"
    "titionMetadata\022\026\n\016partial_update\030\020 \001(\010\0223"
    "\n\tapex_info\030\021 \003(\0132 .chromeos_update_engi"
    "ne.ApexInfo\022\034\n\024security_patch_level\030\022 \001("
    "\tJ\004\010\001\020\002J\004\010\002\020\003J\004\010\006\020\007J\004\010\007\020\010J\004\010\010\020\tJ\004\010\t\020\nJ\004\010"
    "\n\020\013J\004\010\013\020\014B\004Z\002./"
};
static ::absl::once_flag descriptor_table_update_5fmetadata_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_update_5fmetadata_2eproto = {
    false,
    false,
    3055,
    descriptor_table_protodef_update_5fmetadata_2eproto,
    "update_metadata.proto",
    &descriptor_table_update_5fmetadata_2eproto_once,
    nullptr,
    0,
    13,
    schemas,
    file_default_instances,
    TableStruct_update_5fmetadata_2eproto::offsets,
    file_level_enum_descriptors_update_5fmetadata_2eproto,
    file_level_service_descriptors_update_5fmetadata_2eproto,
};
namespace chromeos_update_engine {
const ::google::protobuf::EnumDescriptor* InstallOperation_Type_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_update_5fmetadata_2eproto);
  return file_level_enum_descriptors_update_5fmetadata_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t InstallOperation_Type_internal_data_[] = {
    983040u, 0u, };
bool InstallOperation_Type_IsValid(int value) {
  return 0 <= value && value <= 14;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr InstallOperation_Type InstallOperation::REPLACE;
constexpr InstallOperation_Type InstallOperation::REPLACE_BZ;
constexpr InstallOperation_Type InstallOperation::MOVE;
constexpr InstallOperation_Type InstallOperation::BSDIFF;
constexpr InstallOperation_Type InstallOperation::SOURCE_COPY;
constexpr InstallOperation_Type InstallOperation::SOURCE_BSDIFF;
constexpr InstallOperation_Type InstallOperation::REPLACE_XZ;
constexpr InstallOperation_Type InstallOperation::ZERO;
constexpr InstallOperation_Type InstallOperation::DISCARD;
constexpr InstallOperation_Type InstallOperation::BROTLI_BSDIFF;
constexpr InstallOperation_Type InstallOperation::PUFFDIFF;
constexpr InstallOperation_Type InstallOperation::ZUCCHINI;
constexpr InstallOperation_Type InstallOperation::LZ4DIFF_BSDIFF;
constexpr InstallOperation_Type InstallOperation::LZ4DIFF_PUFFDIFF;
constexpr InstallOperation_Type InstallOperation::ZSTD;
constexpr InstallOperation_Type InstallOperation::Type_MIN;
constexpr InstallOperation_Type InstallOperation::Type_MAX;
constexpr int InstallOperation::Type_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* CowMergeOperation_Type_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_update_5fmetadata_2eproto);
  return file_level_enum_descriptors_update_5fmetadata_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t CowMergeOperation_Type_internal_data_[] = {
    196608u, 0u, };
bool CowMergeOperation_Type_IsValid(int value) {
  return 0 <= value && value <= 2;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr CowMergeOperation_Type CowMergeOperation::COW_COPY;
constexpr CowMergeOperation_Type CowMergeOperation::COW_XOR;
constexpr CowMergeOperation_Type CowMergeOperation::COW_REPLACE;
constexpr CowMergeOperation_Type CowMergeOperation::Type_MIN;
constexpr CowMergeOperation_Type CowMergeOperation::Type_MAX;
constexpr int CowMergeOperation::Type_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
// ===================================================================

class Extent::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Extent>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Extent, _impl_._has_bits_);
};

Extent::Extent(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:chromeos_update_engine.Extent)
}
Extent::Extent(
    ::google::protobuf::Arena* arena, const Extent& from)
    : Extent(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE Extent::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Extent::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, start_block_),
           0,
           offsetof(Impl_, num_blocks_) -
               offsetof(Impl_, start_block_) +
               sizeof(Impl_::num_blocks_));
}
Extent::~Extent() {
  // @@protoc_insertion_point(destructor:chromeos_update_engine.Extent)
  SharedDtor(*this);
}
inline void Extent::SharedDtor(MessageLite& self) {
  Extent& this_ = static_cast<Extent&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* Extent::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Extent(arena);
}
constexpr auto Extent::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Extent),
                                            alignof(Extent));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Extent::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Extent_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Extent::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Extent>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Extent::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Extent>(), &Extent::ByteSizeLong,
            &Extent::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Extent, _impl_._cached_size_),
        false,
    },
    &Extent::kDescriptorMethods,
    &descriptor_table_update_5fmetadata_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Extent::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> Extent::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Extent, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::chromeos_update_engine::Extent>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional uint64 num_blocks = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Extent, _impl_.num_blocks_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(Extent, _impl_.num_blocks_)}},
    // optional uint64 start_block = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Extent, _impl_.start_block_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(Extent, _impl_.start_block_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint64 start_block = 1;
    {PROTOBUF_FIELD_OFFSET(Extent, _impl_.start_block_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional uint64 num_blocks = 2;
    {PROTOBUF_FIELD_OFFSET(Extent, _impl_.num_blocks_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void Extent::Clear() {
// @@protoc_insertion_point(message_clear_start:chromeos_update_engine.Extent)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&_impl_.start_block_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.num_blocks_) -
        reinterpret_cast<char*>(&_impl_.start_block_)) + sizeof(_impl_.num_blocks_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Extent::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Extent& this_ = static_cast<const Extent&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Extent::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Extent& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:chromeos_update_engine.Extent)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional uint64 start_block = 1;
          if (cached_has_bits & 0x00000001u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_start_block(), target);
          }

          // optional uint64 num_blocks = 2;
          if (cached_has_bits & 0x00000002u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                2, this_._internal_num_blocks(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:chromeos_update_engine.Extent)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Extent::ByteSizeLong(const MessageLite& base) {
          const Extent& this_ = static_cast<const Extent&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Extent::ByteSizeLong() const {
          const Extent& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:chromeos_update_engine.Extent)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // optional uint64 start_block = 1;
            if (cached_has_bits & 0x00000001u) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_start_block());
            }
            // optional uint64 num_blocks = 2;
            if (cached_has_bits & 0x00000002u) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_num_blocks());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Extent::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Extent*>(&to_msg);
  auto& from = static_cast<const Extent&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:chromeos_update_engine.Extent)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.start_block_ = from._impl_.start_block_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.num_blocks_ = from._impl_.num_blocks_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Extent::CopyFrom(const Extent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:chromeos_update_engine.Extent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Extent::InternalSwap(Extent* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Extent, _impl_.num_blocks_)
      + sizeof(Extent::_impl_.num_blocks_)
      - PROTOBUF_FIELD_OFFSET(Extent, _impl_.start_block_)>(
          reinterpret_cast<char*>(&_impl_.start_block_),
          reinterpret_cast<char*>(&other->_impl_.start_block_));
}

::google::protobuf::Metadata Extent::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Signatures_Signature::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Signatures_Signature>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Signatures_Signature, _impl_._has_bits_);
};

Signatures_Signature::Signatures_Signature(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:chromeos_update_engine.Signatures.Signature)
}
inline PROTOBUF_NDEBUG_INLINE Signatures_Signature::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::chromeos_update_engine::Signatures_Signature& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        data_(arena, from.data_) {}

Signatures_Signature::Signatures_Signature(
    ::google::protobuf::Arena* arena,
    const Signatures_Signature& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Signatures_Signature* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, version_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, version_),
           offsetof(Impl_, unpadded_signature_size_) -
               offsetof(Impl_, version_) +
               sizeof(Impl_::unpadded_signature_size_));

  // @@protoc_insertion_point(copy_constructor:chromeos_update_engine.Signatures.Signature)
}
inline PROTOBUF_NDEBUG_INLINE Signatures_Signature::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        data_(arena) {}

inline void Signatures_Signature::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, version_),
           0,
           offsetof(Impl_, unpadded_signature_size_) -
               offsetof(Impl_, version_) +
               sizeof(Impl_::unpadded_signature_size_));
}
Signatures_Signature::~Signatures_Signature() {
  // @@protoc_insertion_point(destructor:chromeos_update_engine.Signatures.Signature)
  SharedDtor(*this);
}
inline void Signatures_Signature::SharedDtor(MessageLite& self) {
  Signatures_Signature& this_ = static_cast<Signatures_Signature&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.data_.Destroy();
  this_._impl_.~Impl_();
}

inline void* Signatures_Signature::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Signatures_Signature(arena);
}
constexpr auto Signatures_Signature::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Signatures_Signature),
                                            alignof(Signatures_Signature));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Signatures_Signature::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Signatures_Signature_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Signatures_Signature::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Signatures_Signature>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Signatures_Signature::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Signatures_Signature>(), &Signatures_Signature::ByteSizeLong,
            &Signatures_Signature::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Signatures_Signature, _impl_._cached_size_),
        false,
    },
    &Signatures_Signature::kDescriptorMethods,
    &descriptor_table_update_5fmetadata_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Signatures_Signature::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> Signatures_Signature::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Signatures_Signature, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::chromeos_update_engine::Signatures_Signature>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional uint32 version = 1 [deprecated = true];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Signatures_Signature, _impl_.version_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(Signatures_Signature, _impl_.version_)}},
    // optional bytes data = 2;
    {::_pbi::TcParser::FastBS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(Signatures_Signature, _impl_.data_)}},
    // optional fixed32 unpadded_signature_size = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 2, 0, PROTOBUF_FIELD_OFFSET(Signatures_Signature, _impl_.unpadded_signature_size_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 version = 1 [deprecated = true];
    {PROTOBUF_FIELD_OFFSET(Signatures_Signature, _impl_.version_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional bytes data = 2;
    {PROTOBUF_FIELD_OFFSET(Signatures_Signature, _impl_.data_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // optional fixed32 unpadded_signature_size = 3;
    {PROTOBUF_FIELD_OFFSET(Signatures_Signature, _impl_.unpadded_signature_size_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFixed32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void Signatures_Signature::Clear() {
// @@protoc_insertion_point(message_clear_start:chromeos_update_engine.Signatures.Signature)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.data_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 0x00000006u) {
    ::memset(&_impl_.version_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.unpadded_signature_size_) -
        reinterpret_cast<char*>(&_impl_.version_)) + sizeof(_impl_.unpadded_signature_size_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Signatures_Signature::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Signatures_Signature& this_ = static_cast<const Signatures_Signature&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Signatures_Signature::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Signatures_Signature& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:chromeos_update_engine.Signatures.Signature)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional uint32 version = 1 [deprecated = true];
          if (cached_has_bits & 0x00000002u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                1, this_._internal_version(), target);
          }

          // optional bytes data = 2;
          if (cached_has_bits & 0x00000001u) {
            const std::string& _s = this_._internal_data();
            target = stream->WriteBytesMaybeAliased(2, _s, target);
          }

          // optional fixed32 unpadded_signature_size = 3;
          if (cached_has_bits & 0x00000004u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFixed32ToArray(
                3, this_._internal_unpadded_signature_size(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:chromeos_update_engine.Signatures.Signature)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Signatures_Signature::ByteSizeLong(const MessageLite& base) {
          const Signatures_Signature& this_ = static_cast<const Signatures_Signature&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Signatures_Signature::ByteSizeLong() const {
          const Signatures_Signature& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:chromeos_update_engine.Signatures.Signature)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000007u) {
            // optional bytes data = 2;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_data());
            }
            // optional uint32 version = 1 [deprecated = true];
            if (cached_has_bits & 0x00000002u) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_version());
            }
            // optional fixed32 unpadded_signature_size = 3;
            if (cached_has_bits & 0x00000004u) {
              total_size += 5;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Signatures_Signature::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Signatures_Signature*>(&to_msg);
  auto& from = static_cast<const Signatures_Signature&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:chromeos_update_engine.Signatures.Signature)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_data(from._internal_data());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.version_ = from._impl_.version_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.unpadded_signature_size_ = from._impl_.unpadded_signature_size_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Signatures_Signature::CopyFrom(const Signatures_Signature& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:chromeos_update_engine.Signatures.Signature)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Signatures_Signature::InternalSwap(Signatures_Signature* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.data_, &other->_impl_.data_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Signatures_Signature, _impl_.unpadded_signature_size_)
      + sizeof(Signatures_Signature::_impl_.unpadded_signature_size_)
      - PROTOBUF_FIELD_OFFSET(Signatures_Signature, _impl_.version_)>(
          reinterpret_cast<char*>(&_impl_.version_),
          reinterpret_cast<char*>(&other->_impl_.version_));
}

::google::protobuf::Metadata Signatures_Signature::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Signatures::_Internal {
 public:
};

Signatures::Signatures(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:chromeos_update_engine.Signatures)
}
inline PROTOBUF_NDEBUG_INLINE Signatures::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::chromeos_update_engine::Signatures& from_msg)
      : signatures_{visibility, arena, from.signatures_},
        _cached_size_{0} {}

Signatures::Signatures(
    ::google::protobuf::Arena* arena,
    const Signatures& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Signatures* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:chromeos_update_engine.Signatures)
}
inline PROTOBUF_NDEBUG_INLINE Signatures::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : signatures_{visibility, arena},
        _cached_size_{0} {}

inline void Signatures::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Signatures::~Signatures() {
  // @@protoc_insertion_point(destructor:chromeos_update_engine.Signatures)
  SharedDtor(*this);
}
inline void Signatures::SharedDtor(MessageLite& self) {
  Signatures& this_ = static_cast<Signatures&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* Signatures::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Signatures(arena);
}
constexpr auto Signatures::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(Signatures, _impl_.signatures_) +
          decltype(Signatures::_impl_.signatures_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(Signatures), alignof(Signatures), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&Signatures::PlacementNew_,
                                 sizeof(Signatures),
                                 alignof(Signatures));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Signatures::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Signatures_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Signatures::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Signatures>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Signatures::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Signatures>(), &Signatures::ByteSizeLong,
            &Signatures::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Signatures, _impl_._cached_size_),
        false,
    },
    &Signatures::kDescriptorMethods,
    &descriptor_table_update_5fmetadata_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Signatures::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> Signatures::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::chromeos_update_engine::Signatures>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .chromeos_update_engine.Signatures.Signature signatures = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Signatures, _impl_.signatures_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .chromeos_update_engine.Signatures.Signature signatures = 1;
    {PROTOBUF_FIELD_OFFSET(Signatures, _impl_.signatures_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::chromeos_update_engine::Signatures_Signature>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Signatures::Clear() {
// @@protoc_insertion_point(message_clear_start:chromeos_update_engine.Signatures)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.signatures_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Signatures::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Signatures& this_ = static_cast<const Signatures&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Signatures::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Signatures& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:chromeos_update_engine.Signatures)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .chromeos_update_engine.Signatures.Signature signatures = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_signatures_size());
               i < n; i++) {
            const auto& repfield = this_._internal_signatures().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:chromeos_update_engine.Signatures)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Signatures::ByteSizeLong(const MessageLite& base) {
          const Signatures& this_ = static_cast<const Signatures&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Signatures::ByteSizeLong() const {
          const Signatures& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:chromeos_update_engine.Signatures)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .chromeos_update_engine.Signatures.Signature signatures = 1;
            {
              total_size += 1UL * this_._internal_signatures_size();
              for (const auto& msg : this_._internal_signatures()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Signatures::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Signatures*>(&to_msg);
  auto& from = static_cast<const Signatures&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:chromeos_update_engine.Signatures)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_signatures()->MergeFrom(
      from._internal_signatures());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Signatures::CopyFrom(const Signatures& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:chromeos_update_engine.Signatures)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Signatures::InternalSwap(Signatures* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.signatures_.InternalSwap(&other->_impl_.signatures_);
}

::google::protobuf::Metadata Signatures::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PartitionInfo::_Internal {
 public:
  using HasBits =
      decltype(std::declval<PartitionInfo>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(PartitionInfo, _impl_._has_bits_);
};

PartitionInfo::PartitionInfo(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:chromeos_update_engine.PartitionInfo)
}
inline PROTOBUF_NDEBUG_INLINE PartitionInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::chromeos_update_engine::PartitionInfo& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        hash_(arena, from.hash_) {}

PartitionInfo::PartitionInfo(
    ::google::protobuf::Arena* arena,
    const PartitionInfo& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PartitionInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.size_ = from._impl_.size_;

  // @@protoc_insertion_point(copy_constructor:chromeos_update_engine.PartitionInfo)
}
inline PROTOBUF_NDEBUG_INLINE PartitionInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        hash_(arena) {}

inline void PartitionInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.size_ = {};
}
PartitionInfo::~PartitionInfo() {
  // @@protoc_insertion_point(destructor:chromeos_update_engine.PartitionInfo)
  SharedDtor(*this);
}
inline void PartitionInfo::SharedDtor(MessageLite& self) {
  PartitionInfo& this_ = static_cast<PartitionInfo&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.hash_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PartitionInfo::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) PartitionInfo(arena);
}
constexpr auto PartitionInfo::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(PartitionInfo),
                                            alignof(PartitionInfo));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull PartitionInfo::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_PartitionInfo_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &PartitionInfo::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<PartitionInfo>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &PartitionInfo::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<PartitionInfo>(), &PartitionInfo::ByteSizeLong,
            &PartitionInfo::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(PartitionInfo, _impl_._cached_size_),
        false,
    },
    &PartitionInfo::kDescriptorMethods,
    &descriptor_table_update_5fmetadata_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* PartitionInfo::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> PartitionInfo::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PartitionInfo, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::chromeos_update_engine::PartitionInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional bytes hash = 2;
    {::_pbi::TcParser::FastBS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(PartitionInfo, _impl_.hash_)}},
    // optional uint64 size = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(PartitionInfo, _impl_.size_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(PartitionInfo, _impl_.size_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint64 size = 1;
    {PROTOBUF_FIELD_OFFSET(PartitionInfo, _impl_.size_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional bytes hash = 2;
    {PROTOBUF_FIELD_OFFSET(PartitionInfo, _impl_.hash_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void PartitionInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:chromeos_update_engine.PartitionInfo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.hash_.ClearNonDefaultToEmpty();
  }
  _impl_.size_ = ::uint64_t{0u};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* PartitionInfo::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const PartitionInfo& this_ = static_cast<const PartitionInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* PartitionInfo::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const PartitionInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:chromeos_update_engine.PartitionInfo)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional uint64 size = 1;
          if (cached_has_bits & 0x00000002u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_size(), target);
          }

          // optional bytes hash = 2;
          if (cached_has_bits & 0x00000001u) {
            const std::string& _s = this_._internal_hash();
            target = stream->WriteBytesMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:chromeos_update_engine.PartitionInfo)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t PartitionInfo::ByteSizeLong(const MessageLite& base) {
          const PartitionInfo& this_ = static_cast<const PartitionInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t PartitionInfo::ByteSizeLong() const {
          const PartitionInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:chromeos_update_engine.PartitionInfo)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // optional bytes hash = 2;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_hash());
            }
            // optional uint64 size = 1;
            if (cached_has_bits & 0x00000002u) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_size());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void PartitionInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PartitionInfo*>(&to_msg);
  auto& from = static_cast<const PartitionInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:chromeos_update_engine.PartitionInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_hash(from._internal_hash());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.size_ = from._impl_.size_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PartitionInfo::CopyFrom(const PartitionInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:chromeos_update_engine.PartitionInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PartitionInfo::InternalSwap(PartitionInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.hash_, &other->_impl_.hash_, arena);
        swap(_impl_.size_, other->_impl_.size_);
}

::google::protobuf::Metadata PartitionInfo::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class InstallOperation::_Internal {
 public:
  using HasBits =
      decltype(std::declval<InstallOperation>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(InstallOperation, _impl_._has_bits_);
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000040) ^ 0x00000040) != 0;
  }
};

InstallOperation::InstallOperation(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:chromeos_update_engine.InstallOperation)
}
inline PROTOBUF_NDEBUG_INLINE InstallOperation::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::chromeos_update_engine::InstallOperation& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        src_extents_{visibility, arena, from.src_extents_},
        dst_extents_{visibility, arena, from.dst_extents_},
        data_sha256_hash_(arena, from.data_sha256_hash_),
        src_sha256_hash_(arena, from.src_sha256_hash_) {}

InstallOperation::InstallOperation(
    ::google::protobuf::Arena* arena,
    const InstallOperation& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  InstallOperation* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, data_offset_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, data_offset_),
           offsetof(Impl_, type_) -
               offsetof(Impl_, data_offset_) +
               sizeof(Impl_::type_));

  // @@protoc_insertion_point(copy_constructor:chromeos_update_engine.InstallOperation)
}
inline PROTOBUF_NDEBUG_INLINE InstallOperation::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        src_extents_{visibility, arena},
        dst_extents_{visibility, arena},
        data_sha256_hash_(arena),
        src_sha256_hash_(arena) {}

inline void InstallOperation::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, data_offset_),
           0,
           offsetof(Impl_, type_) -
               offsetof(Impl_, data_offset_) +
               sizeof(Impl_::type_));
}
InstallOperation::~InstallOperation() {
  // @@protoc_insertion_point(destructor:chromeos_update_engine.InstallOperation)
  SharedDtor(*this);
}
inline void InstallOperation::SharedDtor(MessageLite& self) {
  InstallOperation& this_ = static_cast<InstallOperation&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.data_sha256_hash_.Destroy();
  this_._impl_.src_sha256_hash_.Destroy();
  this_._impl_.~Impl_();
}

inline void* InstallOperation::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) InstallOperation(arena);
}
constexpr auto InstallOperation::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(InstallOperation, _impl_.src_extents_) +
          decltype(InstallOperation::_impl_.src_extents_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(InstallOperation, _impl_.dst_extents_) +
          decltype(InstallOperation::_impl_.dst_extents_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(InstallOperation), alignof(InstallOperation), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&InstallOperation::PlacementNew_,
                                 sizeof(InstallOperation),
                                 alignof(InstallOperation));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull InstallOperation::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_InstallOperation_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        InstallOperation::IsInitializedImpl,
        &InstallOperation::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<InstallOperation>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &InstallOperation::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<InstallOperation>(), &InstallOperation::ByteSizeLong,
            &InstallOperation::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(InstallOperation, _impl_._cached_size_),
        false,
    },
    &InstallOperation::kDescriptorMethods,
    &descriptor_table_update_5fmetadata_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* InstallOperation::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 9, 3, 0, 2> InstallOperation::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(InstallOperation, _impl_._has_bits_),
    0, // no _extensions_
    9, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966784,  // skipmap
    offsetof(decltype(_table_), field_entries),
    9,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::chromeos_update_engine::InstallOperation>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // required .chromeos_update_engine.InstallOperation.Type type = 1;
    {::_pbi::TcParser::FastEr0S1,
     {8, 6, 14, PROTOBUF_FIELD_OFFSET(InstallOperation, _impl_.type_)}},
    // optional uint64 data_offset = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(InstallOperation, _impl_.data_offset_), 2>(),
     {16, 2, 0, PROTOBUF_FIELD_OFFSET(InstallOperation, _impl_.data_offset_)}},
    // optional uint64 data_length = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(InstallOperation, _impl_.data_length_), 3>(),
     {24, 3, 0, PROTOBUF_FIELD_OFFSET(InstallOperation, _impl_.data_length_)}},
    // repeated .chromeos_update_engine.Extent src_extents = 4;
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(InstallOperation, _impl_.src_extents_)}},
    // optional uint64 src_length = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(InstallOperation, _impl_.src_length_), 4>(),
     {40, 4, 0, PROTOBUF_FIELD_OFFSET(InstallOperation, _impl_.src_length_)}},
    // repeated .chromeos_update_engine.Extent dst_extents = 6;
    {::_pbi::TcParser::FastMtR1,
     {50, 63, 1, PROTOBUF_FIELD_OFFSET(InstallOperation, _impl_.dst_extents_)}},
    // optional uint64 dst_length = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(InstallOperation, _impl_.dst_length_), 5>(),
     {56, 5, 0, PROTOBUF_FIELD_OFFSET(InstallOperation, _impl_.dst_length_)}},
    // optional bytes data_sha256_hash = 8;
    {::_pbi::TcParser::FastBS1,
     {66, 0, 0, PROTOBUF_FIELD_OFFSET(InstallOperation, _impl_.data_sha256_hash_)}},
    // optional bytes src_sha256_hash = 9;
    {::_pbi::TcParser::FastBS1,
     {74, 1, 0, PROTOBUF_FIELD_OFFSET(InstallOperation, _impl_.src_sha256_hash_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // required .chromeos_update_engine.InstallOperation.Type type = 1;
    {PROTOBUF_FIELD_OFFSET(InstallOperation, _impl_.type_), _Internal::kHasBitsOffset + 6, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // optional uint64 data_offset = 2;
    {PROTOBUF_FIELD_OFFSET(InstallOperation, _impl_.data_offset_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional uint64 data_length = 3;
    {PROTOBUF_FIELD_OFFSET(InstallOperation, _impl_.data_length_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // repeated .chromeos_update_engine.Extent src_extents = 4;
    {PROTOBUF_FIELD_OFFSET(InstallOperation, _impl_.src_extents_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional uint64 src_length = 5;
    {PROTOBUF_FIELD_OFFSET(InstallOperation, _impl_.src_length_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // repeated .chromeos_update_engine.Extent dst_extents = 6;
    {PROTOBUF_FIELD_OFFSET(InstallOperation, _impl_.dst_extents_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional uint64 dst_length = 7;
    {PROTOBUF_FIELD_OFFSET(InstallOperation, _impl_.dst_length_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional bytes data_sha256_hash = 8;
    {PROTOBUF_FIELD_OFFSET(InstallOperation, _impl_.data_sha256_hash_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // optional bytes src_sha256_hash = 9;
    {PROTOBUF_FIELD_OFFSET(InstallOperation, _impl_.src_sha256_hash_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::chromeos_update_engine::Extent>()},
    {::_pbi::TcParser::GetTable<::chromeos_update_engine::Extent>()},
    {0, 15},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void InstallOperation::Clear() {
// @@protoc_insertion_point(message_clear_start:chromeos_update_engine.InstallOperation)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.src_extents_.Clear();
  _impl_.dst_extents_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.data_sha256_hash_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.src_sha256_hash_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x0000007cu) {
    ::memset(&_impl_.data_offset_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.type_) -
        reinterpret_cast<char*>(&_impl_.data_offset_)) + sizeof(_impl_.type_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* InstallOperation::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const InstallOperation& this_ = static_cast<const InstallOperation&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* InstallOperation::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const InstallOperation& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:chromeos_update_engine.InstallOperation)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // required .chromeos_update_engine.InstallOperation.Type type = 1;
          if (cached_has_bits & 0x00000040u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                1, this_._internal_type(), target);
          }

          // optional uint64 data_offset = 2;
          if (cached_has_bits & 0x00000004u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                2, this_._internal_data_offset(), target);
          }

          // optional uint64 data_length = 3;
          if (cached_has_bits & 0x00000008u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                3, this_._internal_data_length(), target);
          }

          // repeated .chromeos_update_engine.Extent src_extents = 4;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_src_extents_size());
               i < n; i++) {
            const auto& repfield = this_._internal_src_extents().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    4, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // optional uint64 src_length = 5;
          if (cached_has_bits & 0x00000010u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                5, this_._internal_src_length(), target);
          }

          // repeated .chromeos_update_engine.Extent dst_extents = 6;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_dst_extents_size());
               i < n; i++) {
            const auto& repfield = this_._internal_dst_extents().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    6, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // optional uint64 dst_length = 7;
          if (cached_has_bits & 0x00000020u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                7, this_._internal_dst_length(), target);
          }

          // optional bytes data_sha256_hash = 8;
          if (cached_has_bits & 0x00000001u) {
            const std::string& _s = this_._internal_data_sha256_hash();
            target = stream->WriteBytesMaybeAliased(8, _s, target);
          }

          // optional bytes src_sha256_hash = 9;
          if (cached_has_bits & 0x00000002u) {
            const std::string& _s = this_._internal_src_sha256_hash();
            target = stream->WriteBytesMaybeAliased(9, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:chromeos_update_engine.InstallOperation)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t InstallOperation::ByteSizeLong(const MessageLite& base) {
          const InstallOperation& this_ = static_cast<const InstallOperation&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t InstallOperation::ByteSizeLong() const {
          const InstallOperation& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:chromeos_update_engine.InstallOperation)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .chromeos_update_engine.Extent src_extents = 4;
            {
              total_size += 1UL * this_._internal_src_extents_size();
              for (const auto& msg : this_._internal_src_extents()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .chromeos_update_engine.Extent dst_extents = 6;
            {
              total_size += 1UL * this_._internal_dst_extents_size();
              for (const auto& msg : this_._internal_dst_extents()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x0000003fu) {
            // optional bytes data_sha256_hash = 8;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_data_sha256_hash());
            }
            // optional bytes src_sha256_hash = 9;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_src_sha256_hash());
            }
            // optional uint64 data_offset = 2;
            if (cached_has_bits & 0x00000004u) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_data_offset());
            }
            // optional uint64 data_length = 3;
            if (cached_has_bits & 0x00000008u) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_data_length());
            }
            // optional uint64 src_length = 5;
            if (cached_has_bits & 0x00000010u) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_src_length());
            }
            // optional uint64 dst_length = 7;
            if (cached_has_bits & 0x00000020u) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_dst_length());
            }
          }
           {
            // required .chromeos_update_engine.InstallOperation.Type type = 1;
            if (cached_has_bits & 0x00000040u) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_type());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void InstallOperation::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<InstallOperation*>(&to_msg);
  auto& from = static_cast<const InstallOperation&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:chromeos_update_engine.InstallOperation)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_src_extents()->MergeFrom(
      from._internal_src_extents());
  _this->_internal_mutable_dst_extents()->MergeFrom(
      from._internal_dst_extents());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_data_sha256_hash(from._internal_data_sha256_hash());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_src_sha256_hash(from._internal_src_sha256_hash());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.data_offset_ = from._impl_.data_offset_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.data_length_ = from._impl_.data_length_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.src_length_ = from._impl_.src_length_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.dst_length_ = from._impl_.dst_length_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.type_ = from._impl_.type_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void InstallOperation::CopyFrom(const InstallOperation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:chromeos_update_engine.InstallOperation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool InstallOperation::IsInitializedImpl(
    const MessageLite& msg) {
  auto& this_ = static_cast<const InstallOperation&>(msg);
  if (_Internal::MissingRequiredFields(this_._impl_._has_bits_)) {
    return false;
  }
  return true;
}

void InstallOperation::InternalSwap(InstallOperation* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.src_extents_.InternalSwap(&other->_impl_.src_extents_);
  _impl_.dst_extents_.InternalSwap(&other->_impl_.dst_extents_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.data_sha256_hash_, &other->_impl_.data_sha256_hash_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.src_sha256_hash_, &other->_impl_.src_sha256_hash_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(InstallOperation, _impl_.type_)
      + sizeof(InstallOperation::_impl_.type_)
      - PROTOBUF_FIELD_OFFSET(InstallOperation, _impl_.data_offset_)>(
          reinterpret_cast<char*>(&_impl_.data_offset_),
          reinterpret_cast<char*>(&other->_impl_.data_offset_));
}

::google::protobuf::Metadata InstallOperation::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CowMergeOperation::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CowMergeOperation>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CowMergeOperation, _impl_._has_bits_);
};

CowMergeOperation::CowMergeOperation(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:chromeos_update_engine.CowMergeOperation)
}
inline PROTOBUF_NDEBUG_INLINE CowMergeOperation::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::chromeos_update_engine::CowMergeOperation& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

CowMergeOperation::CowMergeOperation(
    ::google::protobuf::Arena* arena,
    const CowMergeOperation& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CowMergeOperation* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.src_extent_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::chromeos_update_engine::Extent>(
                              arena, *from._impl_.src_extent_)
                        : nullptr;
  _impl_.dst_extent_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::chromeos_update_engine::Extent>(
                              arena, *from._impl_.dst_extent_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, type_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, type_),
           offsetof(Impl_, src_offset_) -
               offsetof(Impl_, type_) +
               sizeof(Impl_::src_offset_));

  // @@protoc_insertion_point(copy_constructor:chromeos_update_engine.CowMergeOperation)
}
inline PROTOBUF_NDEBUG_INLINE CowMergeOperation::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void CowMergeOperation::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, src_extent_),
           0,
           offsetof(Impl_, src_offset_) -
               offsetof(Impl_, src_extent_) +
               sizeof(Impl_::src_offset_));
}
CowMergeOperation::~CowMergeOperation() {
  // @@protoc_insertion_point(destructor:chromeos_update_engine.CowMergeOperation)
  SharedDtor(*this);
}
inline void CowMergeOperation::SharedDtor(MessageLite& self) {
  CowMergeOperation& this_ = static_cast<CowMergeOperation&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.src_extent_;
  delete this_._impl_.dst_extent_;
  this_._impl_.~Impl_();
}

inline void* CowMergeOperation::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) CowMergeOperation(arena);
}
constexpr auto CowMergeOperation::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CowMergeOperation),
                                            alignof(CowMergeOperation));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull CowMergeOperation::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_CowMergeOperation_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &CowMergeOperation::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<CowMergeOperation>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &CowMergeOperation::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<CowMergeOperation>(), &CowMergeOperation::ByteSizeLong,
            &CowMergeOperation::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(CowMergeOperation, _impl_._cached_size_),
        false,
    },
    &CowMergeOperation::kDescriptorMethods,
    &descriptor_table_update_5fmetadata_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* CowMergeOperation::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 3, 0, 2> CowMergeOperation::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CowMergeOperation, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::chromeos_update_engine::CowMergeOperation>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional uint32 src_offset = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CowMergeOperation, _impl_.src_offset_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(CowMergeOperation, _impl_.src_offset_)}},
    // optional .chromeos_update_engine.CowMergeOperation.Type type = 1;
    {::_pbi::TcParser::FastEr0S1,
     {8, 2, 2, PROTOBUF_FIELD_OFFSET(CowMergeOperation, _impl_.type_)}},
    // optional .chromeos_update_engine.Extent src_extent = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(CowMergeOperation, _impl_.src_extent_)}},
    // optional .chromeos_update_engine.Extent dst_extent = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 1, PROTOBUF_FIELD_OFFSET(CowMergeOperation, _impl_.dst_extent_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .chromeos_update_engine.CowMergeOperation.Type type = 1;
    {PROTOBUF_FIELD_OFFSET(CowMergeOperation, _impl_.type_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // optional .chromeos_update_engine.Extent src_extent = 2;
    {PROTOBUF_FIELD_OFFSET(CowMergeOperation, _impl_.src_extent_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .chromeos_update_engine.Extent dst_extent = 3;
    {PROTOBUF_FIELD_OFFSET(CowMergeOperation, _impl_.dst_extent_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional uint32 src_offset = 4;
    {PROTOBUF_FIELD_OFFSET(CowMergeOperation, _impl_.src_offset_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::chromeos_update_engine::Extent>()},
    {::_pbi::TcParser::GetTable<::chromeos_update_engine::Extent>()},
    {0, 3},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void CowMergeOperation::Clear() {
// @@protoc_insertion_point(message_clear_start:chromeos_update_engine.CowMergeOperation)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.src_extent_ != nullptr);
      _impl_.src_extent_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.dst_extent_ != nullptr);
      _impl_.dst_extent_->Clear();
    }
  }
  if (cached_has_bits & 0x0000000cu) {
    ::memset(&_impl_.type_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.src_offset_) -
        reinterpret_cast<char*>(&_impl_.type_)) + sizeof(_impl_.src_offset_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* CowMergeOperation::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const CowMergeOperation& this_ = static_cast<const CowMergeOperation&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* CowMergeOperation::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const CowMergeOperation& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:chromeos_update_engine.CowMergeOperation)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional .chromeos_update_engine.CowMergeOperation.Type type = 1;
          if (cached_has_bits & 0x00000004u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                1, this_._internal_type(), target);
          }

          // optional .chromeos_update_engine.Extent src_extent = 2;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.src_extent_, this_._impl_.src_extent_->GetCachedSize(), target,
                stream);
          }

          // optional .chromeos_update_engine.Extent dst_extent = 3;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.dst_extent_, this_._impl_.dst_extent_->GetCachedSize(), target,
                stream);
          }

          // optional uint32 src_offset = 4;
          if (cached_has_bits & 0x00000008u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                4, this_._internal_src_offset(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:chromeos_update_engine.CowMergeOperation)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t CowMergeOperation::ByteSizeLong(const MessageLite& base) {
          const CowMergeOperation& this_ = static_cast<const CowMergeOperation&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t CowMergeOperation::ByteSizeLong() const {
          const CowMergeOperation& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:chromeos_update_engine.CowMergeOperation)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x0000000fu) {
            // optional .chromeos_update_engine.Extent src_extent = 2;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.src_extent_);
            }
            // optional .chromeos_update_engine.Extent dst_extent = 3;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.dst_extent_);
            }
            // optional .chromeos_update_engine.CowMergeOperation.Type type = 1;
            if (cached_has_bits & 0x00000004u) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_type());
            }
            // optional uint32 src_offset = 4;
            if (cached_has_bits & 0x00000008u) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_src_offset());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void CowMergeOperation::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CowMergeOperation*>(&to_msg);
  auto& from = static_cast<const CowMergeOperation&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:chromeos_update_engine.CowMergeOperation)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.src_extent_ != nullptr);
      if (_this->_impl_.src_extent_ == nullptr) {
        _this->_impl_.src_extent_ =
            ::google::protobuf::Message::CopyConstruct<::chromeos_update_engine::Extent>(arena, *from._impl_.src_extent_);
      } else {
        _this->_impl_.src_extent_->MergeFrom(*from._impl_.src_extent_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.dst_extent_ != nullptr);
      if (_this->_impl_.dst_extent_ == nullptr) {
        _this->_impl_.dst_extent_ =
            ::google::protobuf::Message::CopyConstruct<::chromeos_update_engine::Extent>(arena, *from._impl_.dst_extent_);
      } else {
        _this->_impl_.dst_extent_->MergeFrom(*from._impl_.dst_extent_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.type_ = from._impl_.type_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.src_offset_ = from._impl_.src_offset_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CowMergeOperation::CopyFrom(const CowMergeOperation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:chromeos_update_engine.CowMergeOperation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CowMergeOperation::InternalSwap(CowMergeOperation* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CowMergeOperation, _impl_.src_offset_)
      + sizeof(CowMergeOperation::_impl_.src_offset_)
      - PROTOBUF_FIELD_OFFSET(CowMergeOperation, _impl_.src_extent_)>(
          reinterpret_cast<char*>(&_impl_.src_extent_),
          reinterpret_cast<char*>(&other->_impl_.src_extent_));
}

::google::protobuf::Metadata CowMergeOperation::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PartitionUpdate::_Internal {
 public:
  using HasBits =
      decltype(std::declval<PartitionUpdate>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(PartitionUpdate, _impl_._has_bits_);
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

PartitionUpdate::PartitionUpdate(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:chromeos_update_engine.PartitionUpdate)
}
inline PROTOBUF_NDEBUG_INLINE PartitionUpdate::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::chromeos_update_engine::PartitionUpdate& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        new_partition_signature_{visibility, arena, from.new_partition_signature_},
        operations_{visibility, arena, from.operations_},
        merge_operations_{visibility, arena, from.merge_operations_},
        partition_name_(arena, from.partition_name_),
        postinstall_path_(arena, from.postinstall_path_),
        filesystem_type_(arena, from.filesystem_type_),
        hash_tree_algorithm_(arena, from.hash_tree_algorithm_),
        hash_tree_salt_(arena, from.hash_tree_salt_),
        version_(arena, from.version_) {}

PartitionUpdate::PartitionUpdate(
    ::google::protobuf::Arena* arena,
    const PartitionUpdate& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PartitionUpdate* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.old_partition_info_ = (cached_has_bits & 0x00000040u) ? ::google::protobuf::Message::CopyConstruct<::chromeos_update_engine::PartitionInfo>(
                              arena, *from._impl_.old_partition_info_)
                        : nullptr;
  _impl_.new_partition_info_ = (cached_has_bits & 0x00000080u) ? ::google::protobuf::Message::CopyConstruct<::chromeos_update_engine::PartitionInfo>(
                              arena, *from._impl_.new_partition_info_)
                        : nullptr;
  _impl_.hash_tree_data_extent_ = (cached_has_bits & 0x00000100u) ? ::google::protobuf::Message::CopyConstruct<::chromeos_update_engine::Extent>(
                              arena, *from._impl_.hash_tree_data_extent_)
                        : nullptr;
  _impl_.hash_tree_extent_ = (cached_has_bits & 0x00000200u) ? ::google::protobuf::Message::CopyConstruct<::chromeos_update_engine::Extent>(
                              arena, *from._impl_.hash_tree_extent_)
                        : nullptr;
  _impl_.fec_data_extent_ = (cached_has_bits & 0x00000400u) ? ::google::protobuf::Message::CopyConstruct<::chromeos_update_engine::Extent>(
                              arena, *from._impl_.fec_data_extent_)
                        : nullptr;
  _impl_.fec_extent_ = (cached_has_bits & 0x00000800u) ? ::google::protobuf::Message::CopyConstruct<::chromeos_update_engine::Extent>(
                              arena, *from._impl_.fec_extent_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, estimate_cow_size_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, estimate_cow_size_),
           offsetof(Impl_, fec_roots_) -
               offsetof(Impl_, estimate_cow_size_) +
               sizeof(Impl_::fec_roots_));

  // @@protoc_insertion_point(copy_constructor:chromeos_update_engine.PartitionUpdate)
}
inline PROTOBUF_NDEBUG_INLINE PartitionUpdate::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        new_partition_signature_{visibility, arena},
        operations_{visibility, arena},
        merge_operations_{visibility, arena},
        partition_name_(arena),
        postinstall_path_(arena),
        filesystem_type_(arena),
        hash_tree_algorithm_(arena),
        hash_tree_salt_(arena),
        version_(arena),
        fec_roots_{2u} {}

inline void PartitionUpdate::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, old_partition_info_),
           0,
           offsetof(Impl_, postinstall_optional_) -
               offsetof(Impl_, old_partition_info_) +
               sizeof(Impl_::postinstall_optional_));
}
PartitionUpdate::~PartitionUpdate() {
  // @@protoc_insertion_point(destructor:chromeos_update_engine.PartitionUpdate)
  SharedDtor(*this);
}
inline void PartitionUpdate::SharedDtor(MessageLite& self) {
  PartitionUpdate& this_ = static_cast<PartitionUpdate&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.partition_name_.Destroy();
  this_._impl_.postinstall_path_.Destroy();
  this_._impl_.filesystem_type_.Destroy();
  this_._impl_.hash_tree_algorithm_.Destroy();
  this_._impl_.hash_tree_salt_.Destroy();
  this_._impl_.version_.Destroy();
  delete this_._impl_.old_partition_info_;
  delete this_._impl_.new_partition_info_;
  delete this_._impl_.hash_tree_data_extent_;
  delete this_._impl_.hash_tree_extent_;
  delete this_._impl_.fec_data_extent_;
  delete this_._impl_.fec_extent_;
  this_._impl_.~Impl_();
}

inline void* PartitionUpdate::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) PartitionUpdate(arena);
}
constexpr auto PartitionUpdate::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(PartitionUpdate, _impl_.new_partition_signature_) +
          decltype(PartitionUpdate::_impl_.new_partition_signature_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(PartitionUpdate, _impl_.operations_) +
          decltype(PartitionUpdate::_impl_.operations_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(PartitionUpdate, _impl_.merge_operations_) +
          decltype(PartitionUpdate::_impl_.merge_operations_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(PartitionUpdate), alignof(PartitionUpdate), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&PartitionUpdate::PlacementNew_,
                                 sizeof(PartitionUpdate),
                                 alignof(PartitionUpdate));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull PartitionUpdate::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_PartitionUpdate_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        PartitionUpdate::IsInitializedImpl,
        &PartitionUpdate::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<PartitionUpdate>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &PartitionUpdate::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<PartitionUpdate>(), &PartitionUpdate::ByteSizeLong,
            &PartitionUpdate::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(PartitionUpdate, _impl_._cached_size_),
        false,
    },
    &PartitionUpdate::kDescriptorMethods,
    &descriptor_table_update_5fmetadata_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* PartitionUpdate::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<5, 20, 9, 134, 2> PartitionUpdate::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PartitionUpdate, _impl_._has_bits_),
    0, // no _extensions_
    20, 248,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4293918720,  // skipmap
    offsetof(decltype(_table_), field_entries),
    20,  // num_field_entries
    9,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::chromeos_update_engine::PartitionUpdate>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // required string partition_name = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(PartitionUpdate, _impl_.partition_name_)}},
    // optional bool run_postinstall = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(PartitionUpdate, _impl_.run_postinstall_), 14>(),
     {16, 14, 0, PROTOBUF_FIELD_OFFSET(PartitionUpdate, _impl_.run_postinstall_)}},
    // optional string postinstall_path = 3;
    {::_pbi::TcParser::FastSS1,
     {26, 1, 0, PROTOBUF_FIELD_OFFSET(PartitionUpdate, _impl_.postinstall_path_)}},
    // optional string filesystem_type = 4;
    {::_pbi::TcParser::FastSS1,
     {34, 2, 0, PROTOBUF_FIELD_OFFSET(PartitionUpdate, _impl_.filesystem_type_)}},
    // repeated .chromeos_update_engine.Signatures.Signature new_partition_signature = 5;
    {::_pbi::TcParser::FastMtR1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(PartitionUpdate, _impl_.new_partition_signature_)}},
    // optional .chromeos_update_engine.PartitionInfo old_partition_info = 6;
    {::_pbi::TcParser::FastMtS1,
     {50, 6, 1, PROTOBUF_FIELD_OFFSET(PartitionUpdate, _impl_.old_partition_info_)}},
    // optional .chromeos_update_engine.PartitionInfo new_partition_info = 7;
    {::_pbi::TcParser::FastMtS1,
     {58, 7, 2, PROTOBUF_FIELD_OFFSET(PartitionUpdate, _impl_.new_partition_info_)}},
    // repeated .chromeos_update_engine.InstallOperation operations = 8;
    {::_pbi::TcParser::FastMtR1,
     {66, 63, 3, PROTOBUF_FIELD_OFFSET(PartitionUpdate, _impl_.operations_)}},
    // optional bool postinstall_optional = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(PartitionUpdate, _impl_.postinstall_optional_), 15>(),
     {72, 15, 0, PROTOBUF_FIELD_OFFSET(PartitionUpdate, _impl_.postinstall_optional_)}},
    // optional .chromeos_update_engine.Extent hash_tree_data_extent = 10;
    {::_pbi::TcParser::FastMtS1,
     {82, 8, 4, PROTOBUF_FIELD_OFFSET(PartitionUpdate, _impl_.hash_tree_data_extent_)}},
    // optional .chromeos_update_engine.Extent hash_tree_extent = 11;
    {::_pbi::TcParser::FastMtS1,
     {90, 9, 5, PROTOBUF_FIELD_OFFSET(PartitionUpdate, _impl_.hash_tree_extent_)}},
    // optional string hash_tree_algorithm = 12;
    {::_pbi::TcParser::FastSS1,
     {98, 3, 0, PROTOBUF_FIELD_OFFSET(PartitionUpdate, _impl_.hash_tree_algorithm_)}},
    // optional bytes hash_tree_salt = 13;
    {::_pbi::TcParser::FastBS1,
     {106, 4, 0, PROTOBUF_FIELD_OFFSET(PartitionUpdate, _impl_.hash_tree_salt_)}},
    // optional .chromeos_update_engine.Extent fec_data_extent = 14;
    {::_pbi::TcParser::FastMtS1,
     {114, 10, 6, PROTOBUF_FIELD_OFFSET(PartitionUpdate, _impl_.fec_data_extent_)}},
    // optional .chromeos_update_engine.Extent fec_extent = 15;
    {::_pbi::TcParser::FastMtS1,
     {122, 11, 7, PROTOBUF_FIELD_OFFSET(PartitionUpdate, _impl_.fec_extent_)}},
    // optional uint32 fec_roots = 16 [default = 2];
    {::_pbi::TcParser::FastV32S2,
     {384, 16, 0, PROTOBUF_FIELD_OFFSET(PartitionUpdate, _impl_.fec_roots_)}},
    // optional string version = 17;
    {::_pbi::TcParser::FastSS2,
     {394, 5, 0, PROTOBUF_FIELD_OFFSET(PartitionUpdate, _impl_.version_)}},
    // repeated .chromeos_update_engine.CowMergeOperation merge_operations = 18;
    {::_pbi::TcParser::FastMtR2,
     {402, 63, 8, PROTOBUF_FIELD_OFFSET(PartitionUpdate, _impl_.merge_operations_)}},
    // optional uint64 estimate_cow_size = 19;
    {::_pbi::TcParser::FastV64S2,
     {408, 12, 0, PROTOBUF_FIELD_OFFSET(PartitionUpdate, _impl_.estimate_cow_size_)}},
    // optional uint64 estimate_op_count_max = 20;
    {::_pbi::TcParser::FastV64S2,
     {416, 13, 0, PROTOBUF_FIELD_OFFSET(PartitionUpdate, _impl_.estimate_op_count_max_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // required string partition_name = 1;
    {PROTOBUF_FIELD_OFFSET(PartitionUpdate, _impl_.partition_name_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional bool run_postinstall = 2;
    {PROTOBUF_FIELD_OFFSET(PartitionUpdate, _impl_.run_postinstall_), _Internal::kHasBitsOffset + 14, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional string postinstall_path = 3;
    {PROTOBUF_FIELD_OFFSET(PartitionUpdate, _impl_.postinstall_path_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string filesystem_type = 4;
    {PROTOBUF_FIELD_OFFSET(PartitionUpdate, _impl_.filesystem_type_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // repeated .chromeos_update_engine.Signatures.Signature new_partition_signature = 5;
    {PROTOBUF_FIELD_OFFSET(PartitionUpdate, _impl_.new_partition_signature_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .chromeos_update_engine.PartitionInfo old_partition_info = 6;
    {PROTOBUF_FIELD_OFFSET(PartitionUpdate, _impl_.old_partition_info_), _Internal::kHasBitsOffset + 6, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .chromeos_update_engine.PartitionInfo new_partition_info = 7;
    {PROTOBUF_FIELD_OFFSET(PartitionUpdate, _impl_.new_partition_info_), _Internal::kHasBitsOffset + 7, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .chromeos_update_engine.InstallOperation operations = 8;
    {PROTOBUF_FIELD_OFFSET(PartitionUpdate, _impl_.operations_), -1, 3,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional bool postinstall_optional = 9;
    {PROTOBUF_FIELD_OFFSET(PartitionUpdate, _impl_.postinstall_optional_), _Internal::kHasBitsOffset + 15, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional .chromeos_update_engine.Extent hash_tree_data_extent = 10;
    {PROTOBUF_FIELD_OFFSET(PartitionUpdate, _impl_.hash_tree_data_extent_), _Internal::kHasBitsOffset + 8, 4,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .chromeos_update_engine.Extent hash_tree_extent = 11;
    {PROTOBUF_FIELD_OFFSET(PartitionUpdate, _impl_.hash_tree_extent_), _Internal::kHasBitsOffset + 9, 5,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional string hash_tree_algorithm = 12;
    {PROTOBUF_FIELD_OFFSET(PartitionUpdate, _impl_.hash_tree_algorithm_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional bytes hash_tree_salt = 13;
    {PROTOBUF_FIELD_OFFSET(PartitionUpdate, _impl_.hash_tree_salt_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // optional .chromeos_update_engine.Extent fec_data_extent = 14;
    {PROTOBUF_FIELD_OFFSET(PartitionUpdate, _impl_.fec_data_extent_), _Internal::kHasBitsOffset + 10, 6,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .chromeos_update_engine.Extent fec_extent = 15;
    {PROTOBUF_FIELD_OFFSET(PartitionUpdate, _impl_.fec_extent_), _Internal::kHasBitsOffset + 11, 7,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional uint32 fec_roots = 16 [default = 2];
    {PROTOBUF_FIELD_OFFSET(PartitionUpdate, _impl_.fec_roots_), _Internal::kHasBitsOffset + 16, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional string version = 17;
    {PROTOBUF_FIELD_OFFSET(PartitionUpdate, _impl_.version_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // repeated .chromeos_update_engine.CowMergeOperation merge_operations = 18;
    {PROTOBUF_FIELD_OFFSET(PartitionUpdate, _impl_.merge_operations_), -1, 8,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional uint64 estimate_cow_size = 19;
    {PROTOBUF_FIELD_OFFSET(PartitionUpdate, _impl_.estimate_cow_size_), _Internal::kHasBitsOffset + 12, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional uint64 estimate_op_count_max = 20;
    {PROTOBUF_FIELD_OFFSET(PartitionUpdate, _impl_.estimate_op_count_max_), _Internal::kHasBitsOffset + 13, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
  }}, {{
    {::_pbi::TcParser::GetTable<::chromeos_update_engine::Signatures_Signature>()},
    {::_pbi::TcParser::GetTable<::chromeos_update_engine::PartitionInfo>()},
    {::_pbi::TcParser::GetTable<::chromeos_update_engine::PartitionInfo>()},
    {::_pbi::TcParser::GetTable<::chromeos_update_engine::InstallOperation>()},
    {::_pbi::TcParser::GetTable<::chromeos_update_engine::Extent>()},
    {::_pbi::TcParser::GetTable<::chromeos_update_engine::Extent>()},
    {::_pbi::TcParser::GetTable<::chromeos_update_engine::Extent>()},
    {::_pbi::TcParser::GetTable<::chromeos_update_engine::Extent>()},
    {::_pbi::TcParser::GetTable<::chromeos_update_engine::CowMergeOperation>()},
  }}, {{
    "\46\16\0\20\17\0\0\0\0\0\0\0\23\0\0\0\0\7\0\0\0\0\0\0"
    "chromeos_update_engine.PartitionUpdate"
    "partition_name"
    "postinstall_path"
    "filesystem_type"
    "hash_tree_algorithm"
    "version"
  }},
};

PROTOBUF_NOINLINE void PartitionUpdate::Clear() {
// @@protoc_insertion_point(message_clear_start:chromeos_update_engine.PartitionUpdate)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.new_partition_signature_.Clear();
  _impl_.operations_.Clear();
  _impl_.merge_operations_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.partition_name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.postinstall_path_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.filesystem_type_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      _impl_.hash_tree_algorithm_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000010u) {
      _impl_.hash_tree_salt_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000020u) {
      _impl_.version_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000040u) {
      ABSL_DCHECK(_impl_.old_partition_info_ != nullptr);
      _impl_.old_partition_info_->Clear();
    }
    if (cached_has_bits & 0x00000080u) {
      ABSL_DCHECK(_impl_.new_partition_info_ != nullptr);
      _impl_.new_partition_info_->Clear();
    }
  }
  if (cached_has_bits & 0x00000f00u) {
    if (cached_has_bits & 0x00000100u) {
      ABSL_DCHECK(_impl_.hash_tree_data_extent_ != nullptr);
      _impl_.hash_tree_data_extent_->Clear();
    }
    if (cached_has_bits & 0x00000200u) {
      ABSL_DCHECK(_impl_.hash_tree_extent_ != nullptr);
      _impl_.hash_tree_extent_->Clear();
    }
    if (cached_has_bits & 0x00000400u) {
      ABSL_DCHECK(_impl_.fec_data_extent_ != nullptr);
      _impl_.fec_data_extent_->Clear();
    }
    if (cached_has_bits & 0x00000800u) {
      ABSL_DCHECK(_impl_.fec_extent_ != nullptr);
      _impl_.fec_extent_->Clear();
    }
  }
  if (cached_has_bits & 0x0000f000u) {
    ::memset(&_impl_.estimate_cow_size_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.postinstall_optional_) -
        reinterpret_cast<char*>(&_impl_.estimate_cow_size_)) + sizeof(_impl_.postinstall_optional_));
  }
  _impl_.fec_roots_ = 2u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* PartitionUpdate::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const PartitionUpdate& this_ = static_cast<const PartitionUpdate&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* PartitionUpdate::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const PartitionUpdate& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:chromeos_update_engine.PartitionUpdate)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // required string partition_name = 1;
          if (cached_has_bits & 0x00000001u) {
            const std::string& _s = this_._internal_partition_name();
            ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                        "chromeos_update_engine.PartitionUpdate.partition_name");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // optional bool run_postinstall = 2;
          if (cached_has_bits & 0x00004000u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                2, this_._internal_run_postinstall(), target);
          }

          // optional string postinstall_path = 3;
          if (cached_has_bits & 0x00000002u) {
            const std::string& _s = this_._internal_postinstall_path();
            ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                        "chromeos_update_engine.PartitionUpdate.postinstall_path");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // optional string filesystem_type = 4;
          if (cached_has_bits & 0x00000004u) {
            const std::string& _s = this_._internal_filesystem_type();
            ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                        "chromeos_update_engine.PartitionUpdate.filesystem_type");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // repeated .chromeos_update_engine.Signatures.Signature new_partition_signature = 5;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_new_partition_signature_size());
               i < n; i++) {
            const auto& repfield = this_._internal_new_partition_signature().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    5, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // optional .chromeos_update_engine.PartitionInfo old_partition_info = 6;
          if (cached_has_bits & 0x00000040u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                6, *this_._impl_.old_partition_info_, this_._impl_.old_partition_info_->GetCachedSize(), target,
                stream);
          }

          // optional .chromeos_update_engine.PartitionInfo new_partition_info = 7;
          if (cached_has_bits & 0x00000080u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                7, *this_._impl_.new_partition_info_, this_._impl_.new_partition_info_->GetCachedSize(), target,
                stream);
          }

          // repeated .chromeos_update_engine.InstallOperation operations = 8;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_operations_size());
               i < n; i++) {
            const auto& repfield = this_._internal_operations().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    8, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // optional bool postinstall_optional = 9;
          if (cached_has_bits & 0x00008000u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                9, this_._internal_postinstall_optional(), target);
          }

          // optional .chromeos_update_engine.Extent hash_tree_data_extent = 10;
          if (cached_has_bits & 0x00000100u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                10, *this_._impl_.hash_tree_data_extent_, this_._impl_.hash_tree_data_extent_->GetCachedSize(), target,
                stream);
          }

          // optional .chromeos_update_engine.Extent hash_tree_extent = 11;
          if (cached_has_bits & 0x00000200u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                11, *this_._impl_.hash_tree_extent_, this_._impl_.hash_tree_extent_->GetCachedSize(), target,
                stream);
          }

          // optional string hash_tree_algorithm = 12;
          if (cached_has_bits & 0x00000008u) {
            const std::string& _s = this_._internal_hash_tree_algorithm();
            ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                        "chromeos_update_engine.PartitionUpdate.hash_tree_algorithm");
            target = stream->WriteStringMaybeAliased(12, _s, target);
          }

          // optional bytes hash_tree_salt = 13;
          if (cached_has_bits & 0x00000010u) {
            const std::string& _s = this_._internal_hash_tree_salt();
            target = stream->WriteBytesMaybeAliased(13, _s, target);
          }

          // optional .chromeos_update_engine.Extent fec_data_extent = 14;
          if (cached_has_bits & 0x00000400u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                14, *this_._impl_.fec_data_extent_, this_._impl_.fec_data_extent_->GetCachedSize(), target,
                stream);
          }

          // optional .chromeos_update_engine.Extent fec_extent = 15;
          if (cached_has_bits & 0x00000800u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                15, *this_._impl_.fec_extent_, this_._impl_.fec_extent_->GetCachedSize(), target,
                stream);
          }

          // optional uint32 fec_roots = 16 [default = 2];
          if (cached_has_bits & 0x00010000u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                16, this_._internal_fec_roots(), target);
          }

          // optional string version = 17;
          if (cached_has_bits & 0x00000020u) {
            const std::string& _s = this_._internal_version();
            ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                        "chromeos_update_engine.PartitionUpdate.version");
            target = stream->WriteStringMaybeAliased(17, _s, target);
          }

          // repeated .chromeos_update_engine.CowMergeOperation merge_operations = 18;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_merge_operations_size());
               i < n; i++) {
            const auto& repfield = this_._internal_merge_operations().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    18, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // optional uint64 estimate_cow_size = 19;
          if (cached_has_bits & 0x00001000u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                19, this_._internal_estimate_cow_size(), target);
          }

          // optional uint64 estimate_op_count_max = 20;
          if (cached_has_bits & 0x00002000u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                20, this_._internal_estimate_op_count_max(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:chromeos_update_engine.PartitionUpdate)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t PartitionUpdate::ByteSizeLong(const MessageLite& base) {
          const PartitionUpdate& this_ = static_cast<const PartitionUpdate&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t PartitionUpdate::ByteSizeLong() const {
          const PartitionUpdate& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:chromeos_update_engine.PartitionUpdate)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .chromeos_update_engine.Signatures.Signature new_partition_signature = 5;
            {
              total_size += 1UL * this_._internal_new_partition_signature_size();
              for (const auto& msg : this_._internal_new_partition_signature()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .chromeos_update_engine.InstallOperation operations = 8;
            {
              total_size += 1UL * this_._internal_operations_size();
              for (const auto& msg : this_._internal_operations()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .chromeos_update_engine.CowMergeOperation merge_operations = 18;
            {
              total_size += 2UL * this_._internal_merge_operations_size();
              for (const auto& msg : this_._internal_merge_operations()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // required string partition_name = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_partition_name());
            }
          }
          if (cached_has_bits & 0x000000feu) {
            // optional string postinstall_path = 3;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_postinstall_path());
            }
            // optional string filesystem_type = 4;
            if (cached_has_bits & 0x00000004u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_filesystem_type());
            }
            // optional string hash_tree_algorithm = 12;
            if (cached_has_bits & 0x00000008u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_hash_tree_algorithm());
            }
            // optional bytes hash_tree_salt = 13;
            if (cached_has_bits & 0x00000010u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_hash_tree_salt());
            }
            // optional string version = 17;
            if (cached_has_bits & 0x00000020u) {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_version());
            }
            // optional .chromeos_update_engine.PartitionInfo old_partition_info = 6;
            if (cached_has_bits & 0x00000040u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.old_partition_info_);
            }
            // optional .chromeos_update_engine.PartitionInfo new_partition_info = 7;
            if (cached_has_bits & 0x00000080u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.new_partition_info_);
            }
          }
          if (cached_has_bits & 0x0000ff00u) {
            // optional .chromeos_update_engine.Extent hash_tree_data_extent = 10;
            if (cached_has_bits & 0x00000100u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.hash_tree_data_extent_);
            }
            // optional .chromeos_update_engine.Extent hash_tree_extent = 11;
            if (cached_has_bits & 0x00000200u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.hash_tree_extent_);
            }
            // optional .chromeos_update_engine.Extent fec_data_extent = 14;
            if (cached_has_bits & 0x00000400u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.fec_data_extent_);
            }
            // optional .chromeos_update_engine.Extent fec_extent = 15;
            if (cached_has_bits & 0x00000800u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.fec_extent_);
            }
            // optional uint64 estimate_cow_size = 19;
            if (cached_has_bits & 0x00001000u) {
              total_size += 2 + ::_pbi::WireFormatLite::UInt64Size(
                                              this_._internal_estimate_cow_size());
            }
            // optional uint64 estimate_op_count_max = 20;
            if (cached_has_bits & 0x00002000u) {
              total_size += 2 + ::_pbi::WireFormatLite::UInt64Size(
                                              this_._internal_estimate_op_count_max());
            }
            // optional bool run_postinstall = 2;
            if (cached_has_bits & 0x00004000u) {
              total_size += 2;
            }
            // optional bool postinstall_optional = 9;
            if (cached_has_bits & 0x00008000u) {
              total_size += 2;
            }
          }
           {
            // optional uint32 fec_roots = 16 [default = 2];
            if (cached_has_bits & 0x00010000u) {
              total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                              this_._internal_fec_roots());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void PartitionUpdate::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PartitionUpdate*>(&to_msg);
  auto& from = static_cast<const PartitionUpdate&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:chromeos_update_engine.PartitionUpdate)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_new_partition_signature()->MergeFrom(
      from._internal_new_partition_signature());
  _this->_internal_mutable_operations()->MergeFrom(
      from._internal_operations());
  _this->_internal_mutable_merge_operations()->MergeFrom(
      from._internal_merge_operations());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_partition_name(from._internal_partition_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_postinstall_path(from._internal_postinstall_path());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_set_filesystem_type(from._internal_filesystem_type());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_set_hash_tree_algorithm(from._internal_hash_tree_algorithm());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_internal_set_hash_tree_salt(from._internal_hash_tree_salt());
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_internal_set_version(from._internal_version());
    }
    if (cached_has_bits & 0x00000040u) {
      ABSL_DCHECK(from._impl_.old_partition_info_ != nullptr);
      if (_this->_impl_.old_partition_info_ == nullptr) {
        _this->_impl_.old_partition_info_ =
            ::google::protobuf::Message::CopyConstruct<::chromeos_update_engine::PartitionInfo>(arena, *from._impl_.old_partition_info_);
      } else {
        _this->_impl_.old_partition_info_->MergeFrom(*from._impl_.old_partition_info_);
      }
    }
    if (cached_has_bits & 0x00000080u) {
      ABSL_DCHECK(from._impl_.new_partition_info_ != nullptr);
      if (_this->_impl_.new_partition_info_ == nullptr) {
        _this->_impl_.new_partition_info_ =
            ::google::protobuf::Message::CopyConstruct<::chromeos_update_engine::PartitionInfo>(arena, *from._impl_.new_partition_info_);
      } else {
        _this->_impl_.new_partition_info_->MergeFrom(*from._impl_.new_partition_info_);
      }
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      ABSL_DCHECK(from._impl_.hash_tree_data_extent_ != nullptr);
      if (_this->_impl_.hash_tree_data_extent_ == nullptr) {
        _this->_impl_.hash_tree_data_extent_ =
            ::google::protobuf::Message::CopyConstruct<::chromeos_update_engine::Extent>(arena, *from._impl_.hash_tree_data_extent_);
      } else {
        _this->_impl_.hash_tree_data_extent_->MergeFrom(*from._impl_.hash_tree_data_extent_);
      }
    }
    if (cached_has_bits & 0x00000200u) {
      ABSL_DCHECK(from._impl_.hash_tree_extent_ != nullptr);
      if (_this->_impl_.hash_tree_extent_ == nullptr) {
        _this->_impl_.hash_tree_extent_ =
            ::google::protobuf::Message::CopyConstruct<::chromeos_update_engine::Extent>(arena, *from._impl_.hash_tree_extent_);
      } else {
        _this->_impl_.hash_tree_extent_->MergeFrom(*from._impl_.hash_tree_extent_);
      }
    }
    if (cached_has_bits & 0x00000400u) {
      ABSL_DCHECK(from._impl_.fec_data_extent_ != nullptr);
      if (_this->_impl_.fec_data_extent_ == nullptr) {
        _this->_impl_.fec_data_extent_ =
            ::google::protobuf::Message::CopyConstruct<::chromeos_update_engine::Extent>(arena, *from._impl_.fec_data_extent_);
      } else {
        _this->_impl_.fec_data_extent_->MergeFrom(*from._impl_.fec_data_extent_);
      }
    }
    if (cached_has_bits & 0x00000800u) {
      ABSL_DCHECK(from._impl_.fec_extent_ != nullptr);
      if (_this->_impl_.fec_extent_ == nullptr) {
        _this->_impl_.fec_extent_ =
            ::google::protobuf::Message::CopyConstruct<::chromeos_update_engine::Extent>(arena, *from._impl_.fec_extent_);
      } else {
        _this->_impl_.fec_extent_->MergeFrom(*from._impl_.fec_extent_);
      }
    }
    if (cached_has_bits & 0x00001000u) {
      _this->_impl_.estimate_cow_size_ = from._impl_.estimate_cow_size_;
    }
    if (cached_has_bits & 0x00002000u) {
      _this->_impl_.estimate_op_count_max_ = from._impl_.estimate_op_count_max_;
    }
    if (cached_has_bits & 0x00004000u) {
      _this->_impl_.run_postinstall_ = from._impl_.run_postinstall_;
    }
    if (cached_has_bits & 0x00008000u) {
      _this->_impl_.postinstall_optional_ = from._impl_.postinstall_optional_;
    }
  }
  if (cached_has_bits & 0x00010000u) {
    _this->_impl_.fec_roots_ = from._impl_.fec_roots_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PartitionUpdate::CopyFrom(const PartitionUpdate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:chromeos_update_engine.PartitionUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PartitionUpdate::IsInitializedImpl(
    const MessageLite& msg) {
  auto& this_ = static_cast<const PartitionUpdate&>(msg);
  if (_Internal::MissingRequiredFields(this_._impl_._has_bits_)) {
    return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(this_._internal_operations()))
    return false;
  return true;
}

void PartitionUpdate::InternalSwap(PartitionUpdate* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.new_partition_signature_.InternalSwap(&other->_impl_.new_partition_signature_);
  _impl_.operations_.InternalSwap(&other->_impl_.operations_);
  _impl_.merge_operations_.InternalSwap(&other->_impl_.merge_operations_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.partition_name_, &other->_impl_.partition_name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.postinstall_path_, &other->_impl_.postinstall_path_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.filesystem_type_, &other->_impl_.filesystem_type_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.hash_tree_algorithm_, &other->_impl_.hash_tree_algorithm_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.hash_tree_salt_, &other->_impl_.hash_tree_salt_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.version_, &other->_impl_.version_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PartitionUpdate, _impl_.fec_roots_)
      + sizeof(PartitionUpdate::_impl_.fec_roots_)
      - PROTOBUF_FIELD_OFFSET(PartitionUpdate, _impl_.old_partition_info_)>(
          reinterpret_cast<char*>(&_impl_.old_partition_info_),
          reinterpret_cast<char*>(&other->_impl_.old_partition_info_));
}

::google::protobuf::Metadata PartitionUpdate::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class DynamicPartitionGroup::_Internal {
 public:
  using HasBits =
      decltype(std::declval<DynamicPartitionGroup>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(DynamicPartitionGroup, _impl_._has_bits_);
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

DynamicPartitionGroup::DynamicPartitionGroup(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:chromeos_update_engine.DynamicPartitionGroup)
}
inline PROTOBUF_NDEBUG_INLINE DynamicPartitionGroup::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::chromeos_update_engine::DynamicPartitionGroup& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        partition_names_{visibility, arena, from.partition_names_},
        name_(arena, from.name_) {}

DynamicPartitionGroup::DynamicPartitionGroup(
    ::google::protobuf::Arena* arena,
    const DynamicPartitionGroup& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  DynamicPartitionGroup* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.size_ = from._impl_.size_;

  // @@protoc_insertion_point(copy_constructor:chromeos_update_engine.DynamicPartitionGroup)
}
inline PROTOBUF_NDEBUG_INLINE DynamicPartitionGroup::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        partition_names_{visibility, arena},
        name_(arena) {}

inline void DynamicPartitionGroup::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.size_ = {};
}
DynamicPartitionGroup::~DynamicPartitionGroup() {
  // @@protoc_insertion_point(destructor:chromeos_update_engine.DynamicPartitionGroup)
  SharedDtor(*this);
}
inline void DynamicPartitionGroup::SharedDtor(MessageLite& self) {
  DynamicPartitionGroup& this_ = static_cast<DynamicPartitionGroup&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.name_.Destroy();
  this_._impl_.~Impl_();
}

inline void* DynamicPartitionGroup::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) DynamicPartitionGroup(arena);
}
constexpr auto DynamicPartitionGroup::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(DynamicPartitionGroup, _impl_.partition_names_) +
          decltype(DynamicPartitionGroup::_impl_.partition_names_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(DynamicPartitionGroup), alignof(DynamicPartitionGroup), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&DynamicPartitionGroup::PlacementNew_,
                                 sizeof(DynamicPartitionGroup),
                                 alignof(DynamicPartitionGroup));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull DynamicPartitionGroup::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_DynamicPartitionGroup_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        DynamicPartitionGroup::IsInitializedImpl,
        &DynamicPartitionGroup::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<DynamicPartitionGroup>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &DynamicPartitionGroup::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<DynamicPartitionGroup>(), &DynamicPartitionGroup::ByteSizeLong,
            &DynamicPartitionGroup::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(DynamicPartitionGroup, _impl_._cached_size_),
        false,
    },
    &DynamicPartitionGroup::kDescriptorMethods,
    &descriptor_table_update_5fmetadata_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* DynamicPartitionGroup::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 72, 2> DynamicPartitionGroup::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(DynamicPartitionGroup, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::chromeos_update_engine::DynamicPartitionGroup>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // required string name = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(DynamicPartitionGroup, _impl_.name_)}},
    // optional uint64 size = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(DynamicPartitionGroup, _impl_.size_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(DynamicPartitionGroup, _impl_.size_)}},
    // repeated string partition_names = 3;
    {::_pbi::TcParser::FastSR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(DynamicPartitionGroup, _impl_.partition_names_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required string name = 1;
    {PROTOBUF_FIELD_OFFSET(DynamicPartitionGroup, _impl_.name_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional uint64 size = 2;
    {PROTOBUF_FIELD_OFFSET(DynamicPartitionGroup, _impl_.size_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // repeated string partition_names = 3;
    {PROTOBUF_FIELD_OFFSET(DynamicPartitionGroup, _impl_.partition_names_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kRawString | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\54\4\0\17\0\0\0\0"
    "chromeos_update_engine.DynamicPartitionGroup"
    "name"
    "partition_names"
  }},
};

PROTOBUF_NOINLINE void DynamicPartitionGroup::Clear() {
// @@protoc_insertion_point(message_clear_start:chromeos_update_engine.DynamicPartitionGroup)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.partition_names_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.name_.ClearNonDefaultToEmpty();
  }
  _impl_.size_ = ::uint64_t{0u};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* DynamicPartitionGroup::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const DynamicPartitionGroup& this_ = static_cast<const DynamicPartitionGroup&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* DynamicPartitionGroup::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const DynamicPartitionGroup& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:chromeos_update_engine.DynamicPartitionGroup)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // required string name = 1;
          if (cached_has_bits & 0x00000001u) {
            const std::string& _s = this_._internal_name();
            ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                        "chromeos_update_engine.DynamicPartitionGroup.name");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // optional uint64 size = 2;
          if (cached_has_bits & 0x00000002u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                2, this_._internal_size(), target);
          }

          // repeated string partition_names = 3;
          for (int i = 0, n = this_._internal_partition_names_size(); i < n; ++i) {
            const auto& s = this_._internal_partition_names().Get(i);
            ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                        "chromeos_update_engine.DynamicPartitionGroup.partition_names");
            target = stream->WriteString(3, s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:chromeos_update_engine.DynamicPartitionGroup)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t DynamicPartitionGroup::ByteSizeLong(const MessageLite& base) {
          const DynamicPartitionGroup& this_ = static_cast<const DynamicPartitionGroup&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t DynamicPartitionGroup::ByteSizeLong() const {
          const DynamicPartitionGroup& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:chromeos_update_engine.DynamicPartitionGroup)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string partition_names = 3;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_partition_names().size());
              for (int i = 0, n = this_._internal_partition_names().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_partition_names().Get(i));
              }
            }
          }
           {
            // required string name = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_name());
            }
          }
           {
            // optional uint64 size = 2;
            if (cached_has_bits & 0x00000002u) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_size());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void DynamicPartitionGroup::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<DynamicPartitionGroup*>(&to_msg);
  auto& from = static_cast<const DynamicPartitionGroup&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:chromeos_update_engine.DynamicPartitionGroup)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_partition_names()->MergeFrom(from._internal_partition_names());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_name(from._internal_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.size_ = from._impl_.size_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DynamicPartitionGroup::CopyFrom(const DynamicPartitionGroup& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:chromeos_update_engine.DynamicPartitionGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool DynamicPartitionGroup::IsInitializedImpl(
    const MessageLite& msg) {
  auto& this_ = static_cast<const DynamicPartitionGroup&>(msg);
  if (_Internal::MissingRequiredFields(this_._impl_._has_bits_)) {
    return false;
  }
  return true;
}

void DynamicPartitionGroup::InternalSwap(DynamicPartitionGroup* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.partition_names_.InternalSwap(&other->_impl_.partition_names_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
        swap(_impl_.size_, other->_impl_.size_);
}

::google::protobuf::Metadata DynamicPartitionGroup::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class VABCFeatureSet::_Internal {
 public:
  using HasBits =
      decltype(std::declval<VABCFeatureSet>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(VABCFeatureSet, _impl_._has_bits_);
};

VABCFeatureSet::VABCFeatureSet(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:chromeos_update_engine.VABCFeatureSet)
}
VABCFeatureSet::VABCFeatureSet(
    ::google::protobuf::Arena* arena, const VABCFeatureSet& from)
    : VABCFeatureSet(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE VABCFeatureSet::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void VABCFeatureSet::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, threaded_),
           0,
           offsetof(Impl_, batch_writes_) -
               offsetof(Impl_, threaded_) +
               sizeof(Impl_::batch_writes_));
}
VABCFeatureSet::~VABCFeatureSet() {
  // @@protoc_insertion_point(destructor:chromeos_update_engine.VABCFeatureSet)
  SharedDtor(*this);
}
inline void VABCFeatureSet::SharedDtor(MessageLite& self) {
  VABCFeatureSet& this_ = static_cast<VABCFeatureSet&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* VABCFeatureSet::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) VABCFeatureSet(arena);
}
constexpr auto VABCFeatureSet::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(VABCFeatureSet),
                                            alignof(VABCFeatureSet));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull VABCFeatureSet::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_VABCFeatureSet_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &VABCFeatureSet::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<VABCFeatureSet>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &VABCFeatureSet::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<VABCFeatureSet>(), &VABCFeatureSet::ByteSizeLong,
            &VABCFeatureSet::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(VABCFeatureSet, _impl_._cached_size_),
        false,
    },
    &VABCFeatureSet::kDescriptorMethods,
    &descriptor_table_update_5fmetadata_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* VABCFeatureSet::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> VABCFeatureSet::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(VABCFeatureSet, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::chromeos_update_engine::VABCFeatureSet>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional bool batch_writes = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(VABCFeatureSet, _impl_.batch_writes_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(VABCFeatureSet, _impl_.batch_writes_)}},
    // optional bool threaded = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(VABCFeatureSet, _impl_.threaded_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(VABCFeatureSet, _impl_.threaded_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional bool threaded = 1;
    {PROTOBUF_FIELD_OFFSET(VABCFeatureSet, _impl_.threaded_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool batch_writes = 2;
    {PROTOBUF_FIELD_OFFSET(VABCFeatureSet, _impl_.batch_writes_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void VABCFeatureSet::Clear() {
// @@protoc_insertion_point(message_clear_start:chromeos_update_engine.VABCFeatureSet)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.threaded_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.batch_writes_) -
      reinterpret_cast<char*>(&_impl_.threaded_)) + sizeof(_impl_.batch_writes_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* VABCFeatureSet::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const VABCFeatureSet& this_ = static_cast<const VABCFeatureSet&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* VABCFeatureSet::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const VABCFeatureSet& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:chromeos_update_engine.VABCFeatureSet)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional bool threaded = 1;
          if (cached_has_bits & 0x00000001u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                1, this_._internal_threaded(), target);
          }

          // optional bool batch_writes = 2;
          if (cached_has_bits & 0x00000002u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                2, this_._internal_batch_writes(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:chromeos_update_engine.VABCFeatureSet)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t VABCFeatureSet::ByteSizeLong(const MessageLite& base) {
          const VABCFeatureSet& this_ = static_cast<const VABCFeatureSet&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t VABCFeatureSet::ByteSizeLong() const {
          const VABCFeatureSet& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:chromeos_update_engine.VABCFeatureSet)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // optional bool threaded = 1;
            if (cached_has_bits & 0x00000001u) {
              total_size += 2;
            }
            // optional bool batch_writes = 2;
            if (cached_has_bits & 0x00000002u) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void VABCFeatureSet::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<VABCFeatureSet*>(&to_msg);
  auto& from = static_cast<const VABCFeatureSet&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:chromeos_update_engine.VABCFeatureSet)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.threaded_ = from._impl_.threaded_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.batch_writes_ = from._impl_.batch_writes_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void VABCFeatureSet::CopyFrom(const VABCFeatureSet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:chromeos_update_engine.VABCFeatureSet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void VABCFeatureSet::InternalSwap(VABCFeatureSet* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(VABCFeatureSet, _impl_.batch_writes_)
      + sizeof(VABCFeatureSet::_impl_.batch_writes_)
      - PROTOBUF_FIELD_OFFSET(VABCFeatureSet, _impl_.threaded_)>(
          reinterpret_cast<char*>(&_impl_.threaded_),
          reinterpret_cast<char*>(&other->_impl_.threaded_));
}

::google::protobuf::Metadata VABCFeatureSet::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class DynamicPartitionMetadata::_Internal {
 public:
  using HasBits =
      decltype(std::declval<DynamicPartitionMetadata>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(DynamicPartitionMetadata, _impl_._has_bits_);
};

DynamicPartitionMetadata::DynamicPartitionMetadata(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:chromeos_update_engine.DynamicPartitionMetadata)
}
inline PROTOBUF_NDEBUG_INLINE DynamicPartitionMetadata::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::chromeos_update_engine::DynamicPartitionMetadata& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        groups_{visibility, arena, from.groups_},
        vabc_compression_param_(arena, from.vabc_compression_param_) {}

DynamicPartitionMetadata::DynamicPartitionMetadata(
    ::google::protobuf::Arena* arena,
    const DynamicPartitionMetadata& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  DynamicPartitionMetadata* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.vabc_feature_set_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::chromeos_update_engine::VABCFeatureSet>(
                              arena, *from._impl_.vabc_feature_set_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, snapshot_enabled_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, snapshot_enabled_),
           offsetof(Impl_, compression_factor_) -
               offsetof(Impl_, snapshot_enabled_) +
               sizeof(Impl_::compression_factor_));

  // @@protoc_insertion_point(copy_constructor:chromeos_update_engine.DynamicPartitionMetadata)
}
inline PROTOBUF_NDEBUG_INLINE DynamicPartitionMetadata::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        groups_{visibility, arena},
        vabc_compression_param_(arena) {}

inline void DynamicPartitionMetadata::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, vabc_feature_set_),
           0,
           offsetof(Impl_, compression_factor_) -
               offsetof(Impl_, vabc_feature_set_) +
               sizeof(Impl_::compression_factor_));
}
DynamicPartitionMetadata::~DynamicPartitionMetadata() {
  // @@protoc_insertion_point(destructor:chromeos_update_engine.DynamicPartitionMetadata)
  SharedDtor(*this);
}
inline void DynamicPartitionMetadata::SharedDtor(MessageLite& self) {
  DynamicPartitionMetadata& this_ = static_cast<DynamicPartitionMetadata&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.vabc_compression_param_.Destroy();
  delete this_._impl_.vabc_feature_set_;
  this_._impl_.~Impl_();
}

inline void* DynamicPartitionMetadata::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) DynamicPartitionMetadata(arena);
}
constexpr auto DynamicPartitionMetadata::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(DynamicPartitionMetadata, _impl_.groups_) +
          decltype(DynamicPartitionMetadata::_impl_.groups_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(DynamicPartitionMetadata), alignof(DynamicPartitionMetadata), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&DynamicPartitionMetadata::PlacementNew_,
                                 sizeof(DynamicPartitionMetadata),
                                 alignof(DynamicPartitionMetadata));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull DynamicPartitionMetadata::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_DynamicPartitionMetadata_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        DynamicPartitionMetadata::IsInitializedImpl,
        &DynamicPartitionMetadata::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<DynamicPartitionMetadata>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &DynamicPartitionMetadata::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<DynamicPartitionMetadata>(), &DynamicPartitionMetadata::ByteSizeLong,
            &DynamicPartitionMetadata::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(DynamicPartitionMetadata, _impl_._cached_size_),
        false,
    },
    &DynamicPartitionMetadata::kDescriptorMethods,
    &descriptor_table_update_5fmetadata_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* DynamicPartitionMetadata::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 2, 78, 2> DynamicPartitionMetadata::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(DynamicPartitionMetadata, _impl_._has_bits_),
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::chromeos_update_engine::DynamicPartitionMetadata>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .chromeos_update_engine.DynamicPartitionGroup groups = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(DynamicPartitionMetadata, _impl_.groups_)}},
    // optional bool snapshot_enabled = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(DynamicPartitionMetadata, _impl_.snapshot_enabled_), 2>(),
     {16, 2, 0, PROTOBUF_FIELD_OFFSET(DynamicPartitionMetadata, _impl_.snapshot_enabled_)}},
    // optional bool vabc_enabled = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(DynamicPartitionMetadata, _impl_.vabc_enabled_), 3>(),
     {24, 3, 0, PROTOBUF_FIELD_OFFSET(DynamicPartitionMetadata, _impl_.vabc_enabled_)}},
    // optional string vabc_compression_param = 4;
    {::_pbi::TcParser::FastSS1,
     {34, 0, 0, PROTOBUF_FIELD_OFFSET(DynamicPartitionMetadata, _impl_.vabc_compression_param_)}},
    // optional uint32 cow_version = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(DynamicPartitionMetadata, _impl_.cow_version_), 4>(),
     {40, 4, 0, PROTOBUF_FIELD_OFFSET(DynamicPartitionMetadata, _impl_.cow_version_)}},
    // optional .chromeos_update_engine.VABCFeatureSet vabc_feature_set = 6;
    {::_pbi::TcParser::FastMtS1,
     {50, 1, 1, PROTOBUF_FIELD_OFFSET(DynamicPartitionMetadata, _impl_.vabc_feature_set_)}},
    // optional uint64 compression_factor = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(DynamicPartitionMetadata, _impl_.compression_factor_), 5>(),
     {56, 5, 0, PROTOBUF_FIELD_OFFSET(DynamicPartitionMetadata, _impl_.compression_factor_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .chromeos_update_engine.DynamicPartitionGroup groups = 1;
    {PROTOBUF_FIELD_OFFSET(DynamicPartitionMetadata, _impl_.groups_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional bool snapshot_enabled = 2;
    {PROTOBUF_FIELD_OFFSET(DynamicPartitionMetadata, _impl_.snapshot_enabled_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool vabc_enabled = 3;
    {PROTOBUF_FIELD_OFFSET(DynamicPartitionMetadata, _impl_.vabc_enabled_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional string vabc_compression_param = 4;
    {PROTOBUF_FIELD_OFFSET(DynamicPartitionMetadata, _impl_.vabc_compression_param_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional uint32 cow_version = 5;
    {PROTOBUF_FIELD_OFFSET(DynamicPartitionMetadata, _impl_.cow_version_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional .chromeos_update_engine.VABCFeatureSet vabc_feature_set = 6;
    {PROTOBUF_FIELD_OFFSET(DynamicPartitionMetadata, _impl_.vabc_feature_set_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional uint64 compression_factor = 7;
    {PROTOBUF_FIELD_OFFSET(DynamicPartitionMetadata, _impl_.compression_factor_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
  }}, {{
    {::_pbi::TcParser::GetTable<::chromeos_update_engine::DynamicPartitionGroup>()},
    {::_pbi::TcParser::GetTable<::chromeos_update_engine::VABCFeatureSet>()},
  }}, {{
    "\57\0\0\0\26\0\0\0"
    "chromeos_update_engine.DynamicPartitionMetadata"
    "vabc_compression_param"
  }},
};

PROTOBUF_NOINLINE void DynamicPartitionMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:chromeos_update_engine.DynamicPartitionMetadata)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.groups_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.vabc_compression_param_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.vabc_feature_set_ != nullptr);
      _impl_.vabc_feature_set_->Clear();
    }
  }
  if (cached_has_bits & 0x0000003cu) {
    ::memset(&_impl_.snapshot_enabled_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.compression_factor_) -
        reinterpret_cast<char*>(&_impl_.snapshot_enabled_)) + sizeof(_impl_.compression_factor_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* DynamicPartitionMetadata::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const DynamicPartitionMetadata& this_ = static_cast<const DynamicPartitionMetadata&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* DynamicPartitionMetadata::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const DynamicPartitionMetadata& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:chromeos_update_engine.DynamicPartitionMetadata)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .chromeos_update_engine.DynamicPartitionGroup groups = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_groups_size());
               i < n; i++) {
            const auto& repfield = this_._internal_groups().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional bool snapshot_enabled = 2;
          if (cached_has_bits & 0x00000004u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                2, this_._internal_snapshot_enabled(), target);
          }

          // optional bool vabc_enabled = 3;
          if (cached_has_bits & 0x00000008u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                3, this_._internal_vabc_enabled(), target);
          }

          // optional string vabc_compression_param = 4;
          if (cached_has_bits & 0x00000001u) {
            const std::string& _s = this_._internal_vabc_compression_param();
            ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                        "chromeos_update_engine.DynamicPartitionMetadata.vabc_compression_param");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // optional uint32 cow_version = 5;
          if (cached_has_bits & 0x00000010u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                5, this_._internal_cow_version(), target);
          }

          // optional .chromeos_update_engine.VABCFeatureSet vabc_feature_set = 6;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                6, *this_._impl_.vabc_feature_set_, this_._impl_.vabc_feature_set_->GetCachedSize(), target,
                stream);
          }

          // optional uint64 compression_factor = 7;
          if (cached_has_bits & 0x00000020u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                7, this_._internal_compression_factor(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:chromeos_update_engine.DynamicPartitionMetadata)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t DynamicPartitionMetadata::ByteSizeLong(const MessageLite& base) {
          const DynamicPartitionMetadata& this_ = static_cast<const DynamicPartitionMetadata&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t DynamicPartitionMetadata::ByteSizeLong() const {
          const DynamicPartitionMetadata& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:chromeos_update_engine.DynamicPartitionMetadata)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .chromeos_update_engine.DynamicPartitionGroup groups = 1;
            {
              total_size += 1UL * this_._internal_groups_size();
              for (const auto& msg : this_._internal_groups()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x0000003fu) {
            // optional string vabc_compression_param = 4;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_vabc_compression_param());
            }
            // optional .chromeos_update_engine.VABCFeatureSet vabc_feature_set = 6;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.vabc_feature_set_);
            }
            // optional bool snapshot_enabled = 2;
            if (cached_has_bits & 0x00000004u) {
              total_size += 2;
            }
            // optional bool vabc_enabled = 3;
            if (cached_has_bits & 0x00000008u) {
              total_size += 2;
            }
            // optional uint32 cow_version = 5;
            if (cached_has_bits & 0x00000010u) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_cow_version());
            }
            // optional uint64 compression_factor = 7;
            if (cached_has_bits & 0x00000020u) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_compression_factor());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void DynamicPartitionMetadata::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<DynamicPartitionMetadata*>(&to_msg);
  auto& from = static_cast<const DynamicPartitionMetadata&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:chromeos_update_engine.DynamicPartitionMetadata)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_groups()->MergeFrom(
      from._internal_groups());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_vabc_compression_param(from._internal_vabc_compression_param());
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.vabc_feature_set_ != nullptr);
      if (_this->_impl_.vabc_feature_set_ == nullptr) {
        _this->_impl_.vabc_feature_set_ =
            ::google::protobuf::Message::CopyConstruct<::chromeos_update_engine::VABCFeatureSet>(arena, *from._impl_.vabc_feature_set_);
      } else {
        _this->_impl_.vabc_feature_set_->MergeFrom(*from._impl_.vabc_feature_set_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.snapshot_enabled_ = from._impl_.snapshot_enabled_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.vabc_enabled_ = from._impl_.vabc_enabled_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.cow_version_ = from._impl_.cow_version_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.compression_factor_ = from._impl_.compression_factor_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DynamicPartitionMetadata::CopyFrom(const DynamicPartitionMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:chromeos_update_engine.DynamicPartitionMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool DynamicPartitionMetadata::IsInitializedImpl(
    const MessageLite& msg) {
  auto& this_ = static_cast<const DynamicPartitionMetadata&>(msg);
  if (!::google::protobuf::internal::AllAreInitialized(this_._internal_groups()))
    return false;
  return true;
}

void DynamicPartitionMetadata::InternalSwap(DynamicPartitionMetadata* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.groups_.InternalSwap(&other->_impl_.groups_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.vabc_compression_param_, &other->_impl_.vabc_compression_param_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DynamicPartitionMetadata, _impl_.compression_factor_)
      + sizeof(DynamicPartitionMetadata::_impl_.compression_factor_)
      - PROTOBUF_FIELD_OFFSET(DynamicPartitionMetadata, _impl_.vabc_feature_set_)>(
          reinterpret_cast<char*>(&_impl_.vabc_feature_set_),
          reinterpret_cast<char*>(&other->_impl_.vabc_feature_set_));
}

::google::protobuf::Metadata DynamicPartitionMetadata::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ApexInfo::_Internal {
 public:
  using HasBits =
      decltype(std::declval<ApexInfo>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ApexInfo, _impl_._has_bits_);
};

ApexInfo::ApexInfo(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:chromeos_update_engine.ApexInfo)
}
inline PROTOBUF_NDEBUG_INLINE ApexInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::chromeos_update_engine::ApexInfo& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        package_name_(arena, from.package_name_) {}

ApexInfo::ApexInfo(
    ::google::protobuf::Arena* arena,
    const ApexInfo& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ApexInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, version_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, version_),
           offsetof(Impl_, is_compressed_) -
               offsetof(Impl_, version_) +
               sizeof(Impl_::is_compressed_));

  // @@protoc_insertion_point(copy_constructor:chromeos_update_engine.ApexInfo)
}
inline PROTOBUF_NDEBUG_INLINE ApexInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        package_name_(arena) {}

inline void ApexInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, version_),
           0,
           offsetof(Impl_, is_compressed_) -
               offsetof(Impl_, version_) +
               sizeof(Impl_::is_compressed_));
}
ApexInfo::~ApexInfo() {
  // @@protoc_insertion_point(destructor:chromeos_update_engine.ApexInfo)
  SharedDtor(*this);
}
inline void ApexInfo::SharedDtor(MessageLite& self) {
  ApexInfo& this_ = static_cast<ApexInfo&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.package_name_.Destroy();
  this_._impl_.~Impl_();
}

inline void* ApexInfo::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ApexInfo(arena);
}
constexpr auto ApexInfo::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ApexInfo),
                                            alignof(ApexInfo));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ApexInfo::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ApexInfo_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ApexInfo::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ApexInfo>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ApexInfo::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ApexInfo>(), &ApexInfo::ByteSizeLong,
            &ApexInfo::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ApexInfo, _impl_._cached_size_),
        false,
    },
    &ApexInfo::kDescriptorMethods,
    &descriptor_table_update_5fmetadata_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ApexInfo::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 52, 2> ApexInfo::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ApexInfo, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::chromeos_update_engine::ApexInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional int64 decompressed_size = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ApexInfo, _impl_.decompressed_size_), 2>(),
     {32, 2, 0, PROTOBUF_FIELD_OFFSET(ApexInfo, _impl_.decompressed_size_)}},
    // optional string package_name = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ApexInfo, _impl_.package_name_)}},
    // optional int64 version = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ApexInfo, _impl_.version_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(ApexInfo, _impl_.version_)}},
    // optional bool is_compressed = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ApexInfo, _impl_.is_compressed_), 3>(),
     {24, 3, 0, PROTOBUF_FIELD_OFFSET(ApexInfo, _impl_.is_compressed_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string package_name = 1;
    {PROTOBUF_FIELD_OFFSET(ApexInfo, _impl_.package_name_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional int64 version = 2;
    {PROTOBUF_FIELD_OFFSET(ApexInfo, _impl_.version_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional bool is_compressed = 3;
    {PROTOBUF_FIELD_OFFSET(ApexInfo, _impl_.is_compressed_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional int64 decompressed_size = 4;
    {PROTOBUF_FIELD_OFFSET(ApexInfo, _impl_.decompressed_size_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
    "\37\14\0\0\0\0\0\0"
    "chromeos_update_engine.ApexInfo"
    "package_name"
  }},
};

PROTOBUF_NOINLINE void ApexInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:chromeos_update_engine.ApexInfo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.package_name_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 0x0000000eu) {
    ::memset(&_impl_.version_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.is_compressed_) -
        reinterpret_cast<char*>(&_impl_.version_)) + sizeof(_impl_.is_compressed_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ApexInfo::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ApexInfo& this_ = static_cast<const ApexInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ApexInfo::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ApexInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:chromeos_update_engine.ApexInfo)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional string package_name = 1;
          if (cached_has_bits & 0x00000001u) {
            const std::string& _s = this_._internal_package_name();
            ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                        "chromeos_update_engine.ApexInfo.package_name");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // optional int64 version = 2;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<2>(
                    stream, this_._internal_version(), target);
          }

          // optional bool is_compressed = 3;
          if (cached_has_bits & 0x00000008u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                3, this_._internal_is_compressed(), target);
          }

          // optional int64 decompressed_size = 4;
          if (cached_has_bits & 0x00000004u) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<4>(
                    stream, this_._internal_decompressed_size(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:chromeos_update_engine.ApexInfo)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ApexInfo::ByteSizeLong(const MessageLite& base) {
          const ApexInfo& this_ = static_cast<const ApexInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ApexInfo::ByteSizeLong() const {
          const ApexInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:chromeos_update_engine.ApexInfo)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x0000000fu) {
            // optional string package_name = 1;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_package_name());
            }
            // optional int64 version = 2;
            if (cached_has_bits & 0x00000002u) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_version());
            }
            // optional int64 decompressed_size = 4;
            if (cached_has_bits & 0x00000004u) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_decompressed_size());
            }
            // optional bool is_compressed = 3;
            if (cached_has_bits & 0x00000008u) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ApexInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ApexInfo*>(&to_msg);
  auto& from = static_cast<const ApexInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:chromeos_update_engine.ApexInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_package_name(from._internal_package_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.version_ = from._impl_.version_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.decompressed_size_ = from._impl_.decompressed_size_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.is_compressed_ = from._impl_.is_compressed_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ApexInfo::CopyFrom(const ApexInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:chromeos_update_engine.ApexInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ApexInfo::InternalSwap(ApexInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.package_name_, &other->_impl_.package_name_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ApexInfo, _impl_.is_compressed_)
      + sizeof(ApexInfo::_impl_.is_compressed_)
      - PROTOBUF_FIELD_OFFSET(ApexInfo, _impl_.version_)>(
          reinterpret_cast<char*>(&_impl_.version_),
          reinterpret_cast<char*>(&other->_impl_.version_));
}

::google::protobuf::Metadata ApexInfo::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ApexMetadata::_Internal {
 public:
};

ApexMetadata::ApexMetadata(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:chromeos_update_engine.ApexMetadata)
}
inline PROTOBUF_NDEBUG_INLINE ApexMetadata::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::chromeos_update_engine::ApexMetadata& from_msg)
      : apex_info_{visibility, arena, from.apex_info_},
        _cached_size_{0} {}

ApexMetadata::ApexMetadata(
    ::google::protobuf::Arena* arena,
    const ApexMetadata& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ApexMetadata* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:chromeos_update_engine.ApexMetadata)
}
inline PROTOBUF_NDEBUG_INLINE ApexMetadata::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : apex_info_{visibility, arena},
        _cached_size_{0} {}

inline void ApexMetadata::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ApexMetadata::~ApexMetadata() {
  // @@protoc_insertion_point(destructor:chromeos_update_engine.ApexMetadata)
  SharedDtor(*this);
}
inline void ApexMetadata::SharedDtor(MessageLite& self) {
  ApexMetadata& this_ = static_cast<ApexMetadata&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* ApexMetadata::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ApexMetadata(arena);
}
constexpr auto ApexMetadata::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(ApexMetadata, _impl_.apex_info_) +
          decltype(ApexMetadata::_impl_.apex_info_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(ApexMetadata), alignof(ApexMetadata), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&ApexMetadata::PlacementNew_,
                                 sizeof(ApexMetadata),
                                 alignof(ApexMetadata));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ApexMetadata::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ApexMetadata_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ApexMetadata::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ApexMetadata>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ApexMetadata::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ApexMetadata>(), &ApexMetadata::ByteSizeLong,
            &ApexMetadata::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ApexMetadata, _impl_._cached_size_),
        false,
    },
    &ApexMetadata::kDescriptorMethods,
    &descriptor_table_update_5fmetadata_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ApexMetadata::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> ApexMetadata::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::chromeos_update_engine::ApexMetadata>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .chromeos_update_engine.ApexInfo apex_info = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ApexMetadata, _impl_.apex_info_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .chromeos_update_engine.ApexInfo apex_info = 1;
    {PROTOBUF_FIELD_OFFSET(ApexMetadata, _impl_.apex_info_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::chromeos_update_engine::ApexInfo>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void ApexMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:chromeos_update_engine.ApexMetadata)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.apex_info_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ApexMetadata::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ApexMetadata& this_ = static_cast<const ApexMetadata&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ApexMetadata::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ApexMetadata& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:chromeos_update_engine.ApexMetadata)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .chromeos_update_engine.ApexInfo apex_info = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_apex_info_size());
               i < n; i++) {
            const auto& repfield = this_._internal_apex_info().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:chromeos_update_engine.ApexMetadata)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ApexMetadata::ByteSizeLong(const MessageLite& base) {
          const ApexMetadata& this_ = static_cast<const ApexMetadata&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ApexMetadata::ByteSizeLong() const {
          const ApexMetadata& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:chromeos_update_engine.ApexMetadata)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .chromeos_update_engine.ApexInfo apex_info = 1;
            {
              total_size += 1UL * this_._internal_apex_info_size();
              for (const auto& msg : this_._internal_apex_info()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ApexMetadata::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ApexMetadata*>(&to_msg);
  auto& from = static_cast<const ApexMetadata&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:chromeos_update_engine.ApexMetadata)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_apex_info()->MergeFrom(
      from._internal_apex_info());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ApexMetadata::CopyFrom(const ApexMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:chromeos_update_engine.ApexMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ApexMetadata::InternalSwap(ApexMetadata* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.apex_info_.InternalSwap(&other->_impl_.apex_info_);
}

::google::protobuf::Metadata ApexMetadata::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class DeltaArchiveManifest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<DeltaArchiveManifest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(DeltaArchiveManifest, _impl_._has_bits_);
};

DeltaArchiveManifest::DeltaArchiveManifest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:chromeos_update_engine.DeltaArchiveManifest)
}
inline PROTOBUF_NDEBUG_INLINE DeltaArchiveManifest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::chromeos_update_engine::DeltaArchiveManifest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        partitions_{visibility, arena, from.partitions_},
        apex_info_{visibility, arena, from.apex_info_},
        security_patch_level_(arena, from.security_patch_level_) {}

DeltaArchiveManifest::DeltaArchiveManifest(
    ::google::protobuf::Arena* arena,
    const DeltaArchiveManifest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  DeltaArchiveManifest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.dynamic_partition_metadata_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::chromeos_update_engine::DynamicPartitionMetadata>(
                              arena, *from._impl_.dynamic_partition_metadata_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, signatures_offset_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, signatures_offset_),
           offsetof(Impl_, block_size_) -
               offsetof(Impl_, signatures_offset_) +
               sizeof(Impl_::block_size_));

  // @@protoc_insertion_point(copy_constructor:chromeos_update_engine.DeltaArchiveManifest)
}
inline PROTOBUF_NDEBUG_INLINE DeltaArchiveManifest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        partitions_{visibility, arena},
        apex_info_{visibility, arena},
        security_patch_level_(arena),
        block_size_{4096u} {}

inline void DeltaArchiveManifest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, dynamic_partition_metadata_),
           0,
           offsetof(Impl_, partial_update_) -
               offsetof(Impl_, dynamic_partition_metadata_) +
               sizeof(Impl_::partial_update_));
}
DeltaArchiveManifest::~DeltaArchiveManifest() {
  // @@protoc_insertion_point(destructor:chromeos_update_engine.DeltaArchiveManifest)
  SharedDtor(*this);
}
inline void DeltaArchiveManifest::SharedDtor(MessageLite& self) {
  DeltaArchiveManifest& this_ = static_cast<DeltaArchiveManifest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.security_patch_level_.Destroy();
  delete this_._impl_.dynamic_partition_metadata_;
  this_._impl_.~Impl_();
}

inline void* DeltaArchiveManifest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) DeltaArchiveManifest(arena);
}
constexpr auto DeltaArchiveManifest::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(DeltaArchiveManifest, _impl_.partitions_) +
          decltype(DeltaArchiveManifest::_impl_.partitions_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(DeltaArchiveManifest, _impl_.apex_info_) +
          decltype(DeltaArchiveManifest::_impl_.apex_info_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(DeltaArchiveManifest), alignof(DeltaArchiveManifest), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&DeltaArchiveManifest::PlacementNew_,
                                 sizeof(DeltaArchiveManifest),
                                 alignof(DeltaArchiveManifest));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull DeltaArchiveManifest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_DeltaArchiveManifest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        DeltaArchiveManifest::IsInitializedImpl,
        &DeltaArchiveManifest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<DeltaArchiveManifest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &DeltaArchiveManifest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<DeltaArchiveManifest>(), &DeltaArchiveManifest::ByteSizeLong,
            &DeltaArchiveManifest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(DeltaArchiveManifest, _impl_._cached_size_),
        false,
    },
    &DeltaArchiveManifest::kDescriptorMethods,
    &descriptor_table_update_5fmetadata_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* DeltaArchiveManifest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 10, 3, 80, 2> DeltaArchiveManifest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(DeltaArchiveManifest, _impl_._has_bits_),
    0, // no _extensions_
    18, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294707171,  // skipmap
    offsetof(decltype(_table_), field_entries),
    10,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::chromeos_update_engine::DeltaArchiveManifest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional bool partial_update = 16;
    {::_pbi::TcParser::FastV8S2,
     {384, 6, 0, PROTOBUF_FIELD_OFFSET(DeltaArchiveManifest, _impl_.partial_update_)}},
    // repeated .chromeos_update_engine.ApexInfo apex_info = 17;
    {::_pbi::TcParser::FastMtR2,
     {394, 63, 2, PROTOBUF_FIELD_OFFSET(DeltaArchiveManifest, _impl_.apex_info_)}},
    // optional string security_patch_level = 18;
    {::_pbi::TcParser::FastSS2,
     {402, 0, 0, PROTOBUF_FIELD_OFFSET(DeltaArchiveManifest, _impl_.security_patch_level_)}},
    // optional uint32 block_size = 3 [default = 4096];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(DeltaArchiveManifest, _impl_.block_size_), 7>(),
     {24, 7, 0, PROTOBUF_FIELD_OFFSET(DeltaArchiveManifest, _impl_.block_size_)}},
    // optional uint64 signatures_offset = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(DeltaArchiveManifest, _impl_.signatures_offset_), 2>(),
     {32, 2, 0, PROTOBUF_FIELD_OFFSET(DeltaArchiveManifest, _impl_.signatures_offset_)}},
    // optional uint64 signatures_size = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(DeltaArchiveManifest, _impl_.signatures_size_), 3>(),
     {40, 3, 0, PROTOBUF_FIELD_OFFSET(DeltaArchiveManifest, _impl_.signatures_size_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional uint32 minor_version = 12 [default = 0];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(DeltaArchiveManifest, _impl_.minor_version_), 5>(),
     {96, 5, 0, PROTOBUF_FIELD_OFFSET(DeltaArchiveManifest, _impl_.minor_version_)}},
    // repeated .chromeos_update_engine.PartitionUpdate partitions = 13;
    {::_pbi::TcParser::FastMtR1,
     {106, 63, 0, PROTOBUF_FIELD_OFFSET(DeltaArchiveManifest, _impl_.partitions_)}},
    // optional int64 max_timestamp = 14;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(DeltaArchiveManifest, _impl_.max_timestamp_), 4>(),
     {112, 4, 0, PROTOBUF_FIELD_OFFSET(DeltaArchiveManifest, _impl_.max_timestamp_)}},
    // optional .chromeos_update_engine.DynamicPartitionMetadata dynamic_partition_metadata = 15;
    {::_pbi::TcParser::FastMtS1,
     {122, 1, 1, PROTOBUF_FIELD_OFFSET(DeltaArchiveManifest, _impl_.dynamic_partition_metadata_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 block_size = 3 [default = 4096];
    {PROTOBUF_FIELD_OFFSET(DeltaArchiveManifest, _impl_.block_size_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint64 signatures_offset = 4;
    {PROTOBUF_FIELD_OFFSET(DeltaArchiveManifest, _impl_.signatures_offset_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional uint64 signatures_size = 5;
    {PROTOBUF_FIELD_OFFSET(DeltaArchiveManifest, _impl_.signatures_size_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional uint32 minor_version = 12 [default = 0];
    {PROTOBUF_FIELD_OFFSET(DeltaArchiveManifest, _impl_.minor_version_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // repeated .chromeos_update_engine.PartitionUpdate partitions = 13;
    {PROTOBUF_FIELD_OFFSET(DeltaArchiveManifest, _impl_.partitions_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional int64 max_timestamp = 14;
    {PROTOBUF_FIELD_OFFSET(DeltaArchiveManifest, _impl_.max_timestamp_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional .chromeos_update_engine.DynamicPartitionMetadata dynamic_partition_metadata = 15;
    {PROTOBUF_FIELD_OFFSET(DeltaArchiveManifest, _impl_.dynamic_partition_metadata_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional bool partial_update = 16;
    {PROTOBUF_FIELD_OFFSET(DeltaArchiveManifest, _impl_.partial_update_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // repeated .chromeos_update_engine.ApexInfo apex_info = 17;
    {PROTOBUF_FIELD_OFFSET(DeltaArchiveManifest, _impl_.apex_info_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional string security_patch_level = 18;
    {PROTOBUF_FIELD_OFFSET(DeltaArchiveManifest, _impl_.security_patch_level_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::chromeos_update_engine::PartitionUpdate>()},
    {::_pbi::TcParser::GetTable<::chromeos_update_engine::DynamicPartitionMetadata>()},
    {::_pbi::TcParser::GetTable<::chromeos_update_engine::ApexInfo>()},
  }}, {{
    "\53\0\0\0\0\0\0\0\0\0\24\0\0\0\0\0"
    "chromeos_update_engine.DeltaArchiveManifest"
    "security_patch_level"
  }},
};

PROTOBUF_NOINLINE void DeltaArchiveManifest::Clear() {
// @@protoc_insertion_point(message_clear_start:chromeos_update_engine.DeltaArchiveManifest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.partitions_.Clear();
  _impl_.apex_info_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.security_patch_level_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.dynamic_partition_metadata_ != nullptr);
      _impl_.dynamic_partition_metadata_->Clear();
    }
  }
  if (cached_has_bits & 0x000000fcu) {
    ::memset(&_impl_.signatures_offset_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.partial_update_) -
        reinterpret_cast<char*>(&_impl_.signatures_offset_)) + sizeof(_impl_.partial_update_));
    _impl_.block_size_ = 4096u;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* DeltaArchiveManifest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const DeltaArchiveManifest& this_ = static_cast<const DeltaArchiveManifest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* DeltaArchiveManifest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const DeltaArchiveManifest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:chromeos_update_engine.DeltaArchiveManifest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional uint32 block_size = 3 [default = 4096];
          if (cached_has_bits & 0x00000080u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                3, this_._internal_block_size(), target);
          }

          // optional uint64 signatures_offset = 4;
          if (cached_has_bits & 0x00000004u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                4, this_._internal_signatures_offset(), target);
          }

          // optional uint64 signatures_size = 5;
          if (cached_has_bits & 0x00000008u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                5, this_._internal_signatures_size(), target);
          }

          // optional uint32 minor_version = 12 [default = 0];
          if (cached_has_bits & 0x00000020u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                12, this_._internal_minor_version(), target);
          }

          // repeated .chromeos_update_engine.PartitionUpdate partitions = 13;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_partitions_size());
               i < n; i++) {
            const auto& repfield = this_._internal_partitions().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    13, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // optional int64 max_timestamp = 14;
          if (cached_has_bits & 0x00000010u) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<14>(
                    stream, this_._internal_max_timestamp(), target);
          }

          // optional .chromeos_update_engine.DynamicPartitionMetadata dynamic_partition_metadata = 15;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                15, *this_._impl_.dynamic_partition_metadata_, this_._impl_.dynamic_partition_metadata_->GetCachedSize(), target,
                stream);
          }

          // optional bool partial_update = 16;
          if (cached_has_bits & 0x00000040u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                16, this_._internal_partial_update(), target);
          }

          // repeated .chromeos_update_engine.ApexInfo apex_info = 17;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_apex_info_size());
               i < n; i++) {
            const auto& repfield = this_._internal_apex_info().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    17, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // optional string security_patch_level = 18;
          if (cached_has_bits & 0x00000001u) {
            const std::string& _s = this_._internal_security_patch_level();
            ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                        "chromeos_update_engine.DeltaArchiveManifest.security_patch_level");
            target = stream->WriteStringMaybeAliased(18, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:chromeos_update_engine.DeltaArchiveManifest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t DeltaArchiveManifest::ByteSizeLong(const MessageLite& base) {
          const DeltaArchiveManifest& this_ = static_cast<const DeltaArchiveManifest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t DeltaArchiveManifest::ByteSizeLong() const {
          const DeltaArchiveManifest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:chromeos_update_engine.DeltaArchiveManifest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .chromeos_update_engine.PartitionUpdate partitions = 13;
            {
              total_size += 1UL * this_._internal_partitions_size();
              for (const auto& msg : this_._internal_partitions()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .chromeos_update_engine.ApexInfo apex_info = 17;
            {
              total_size += 2UL * this_._internal_apex_info_size();
              for (const auto& msg : this_._internal_apex_info()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x000000ffu) {
            // optional string security_patch_level = 18;
            if (cached_has_bits & 0x00000001u) {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_security_patch_level());
            }
            // optional .chromeos_update_engine.DynamicPartitionMetadata dynamic_partition_metadata = 15;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.dynamic_partition_metadata_);
            }
            // optional uint64 signatures_offset = 4;
            if (cached_has_bits & 0x00000004u) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_signatures_offset());
            }
            // optional uint64 signatures_size = 5;
            if (cached_has_bits & 0x00000008u) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_signatures_size());
            }
            // optional int64 max_timestamp = 14;
            if (cached_has_bits & 0x00000010u) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_max_timestamp());
            }
            // optional uint32 minor_version = 12 [default = 0];
            if (cached_has_bits & 0x00000020u) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_minor_version());
            }
            // optional bool partial_update = 16;
            if (cached_has_bits & 0x00000040u) {
              total_size += 3;
            }
            // optional uint32 block_size = 3 [default = 4096];
            if (cached_has_bits & 0x00000080u) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_block_size());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void DeltaArchiveManifest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<DeltaArchiveManifest*>(&to_msg);
  auto& from = static_cast<const DeltaArchiveManifest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:chromeos_update_engine.DeltaArchiveManifest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_partitions()->MergeFrom(
      from._internal_partitions());
  _this->_internal_mutable_apex_info()->MergeFrom(
      from._internal_apex_info());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_security_patch_level(from._internal_security_patch_level());
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.dynamic_partition_metadata_ != nullptr);
      if (_this->_impl_.dynamic_partition_metadata_ == nullptr) {
        _this->_impl_.dynamic_partition_metadata_ =
            ::google::protobuf::Message::CopyConstruct<::chromeos_update_engine::DynamicPartitionMetadata>(arena, *from._impl_.dynamic_partition_metadata_);
      } else {
        _this->_impl_.dynamic_partition_metadata_->MergeFrom(*from._impl_.dynamic_partition_metadata_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.signatures_offset_ = from._impl_.signatures_offset_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.signatures_size_ = from._impl_.signatures_size_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.max_timestamp_ = from._impl_.max_timestamp_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.minor_version_ = from._impl_.minor_version_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.partial_update_ = from._impl_.partial_update_;
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_impl_.block_size_ = from._impl_.block_size_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DeltaArchiveManifest::CopyFrom(const DeltaArchiveManifest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:chromeos_update_engine.DeltaArchiveManifest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool DeltaArchiveManifest::IsInitializedImpl(
    const MessageLite& msg) {
  auto& this_ = static_cast<const DeltaArchiveManifest&>(msg);
  if (!::google::protobuf::internal::AllAreInitialized(this_._internal_partitions()))
    return false;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (!this_._impl_.dynamic_partition_metadata_->IsInitialized()) return false;
  }
  return true;
}

void DeltaArchiveManifest::InternalSwap(DeltaArchiveManifest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.partitions_.InternalSwap(&other->_impl_.partitions_);
  _impl_.apex_info_.InternalSwap(&other->_impl_.apex_info_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.security_patch_level_, &other->_impl_.security_patch_level_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DeltaArchiveManifest, _impl_.block_size_)
      + sizeof(DeltaArchiveManifest::_impl_.block_size_)
      - PROTOBUF_FIELD_OFFSET(DeltaArchiveManifest, _impl_.dynamic_partition_metadata_)>(
          reinterpret_cast<char*>(&_impl_.dynamic_partition_metadata_),
          reinterpret_cast<char*>(&other->_impl_.dynamic_partition_metadata_));
}

::google::protobuf::Metadata DeltaArchiveManifest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace chromeos_update_engine
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_update_5fmetadata_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
